{"version":3,"file":"static/js/38.d4f9fd17.chunk.js","mappings":"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","sources":["redux/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ItemContact/ItemContact.jsx","components/UlForCL/UlForCL.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/PageUsers/PageUsers.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Styles.module.css?0d1d"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectBackgroundImages = state => state.backgroundImages.images;\n\nconst blackListImages = [926728, 2325627, 2004483, 1911637, 1365995, 2750627, 11080, 5422901];\n\nexport const selectBgGeneral = createSelector(\n    [selectBackgroundImages],\n    (backgroundImages) => {\n        if (backgroundImages.length > 0){\n            const bgGeneral = backgroundImages[0];\n        blackListImages.push(bgGeneral.id);\n        return bgGeneral\n    }\n    }\n);\n\nexport const selectReservedBG = createSelector(\n    [selectBackgroundImages],\n    (backgroundImages) => {\n        if (backgroundImages.length > 1){\n            const reservedBG = backgroundImages[1];\n            blackListImages.push(reservedBG.id);\n            return reservedBG\n        } \n    }\n);\n\nexport const selectBackgrounds = createSelector(\n    [selectBackgroundImages, () => blackListImages],\n    (backgroundImages, blackList) => {\n        const backgrounds = backgroundImages.filter(img => !blackList.includes(Number(img.id)));\n        return backgrounds;\n    }\n);\n\nexport const selectNumbsForImg = state => state.backgroundImages.numbsForImg;","import { addContact } from '../../redux/opertions';\nimport css from '../Styles.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const namesContacts = useSelector(selectContacts).map(contact => contact.name);\n\n    const updateStateForAdd = (evt) => {\n        evt.preventDefault();\n        const newName = evt.currentTarget.elements.name.value;\n        \n        if(!namesContacts.some(name => name.toLowerCase() === newName.toLowerCase())){\n            const newNumb = evt.currentTarget.elements.number.value;\n            const dataForAdd = {\n                name: newName,\n                phone: newNumb\n            }\n            dispatch(addContact(dataForAdd));\n            evt.currentTarget.reset();\n        } else{\n            alert(`${newName} is already in contacts.`)\n        }\n        };\n\n    return (\n        <form className={css.form} onSubmit={updateStateForAdd}>\n            <label className={css.label}>\n                <span className={css.nameInput}>Name</span>\n            <input className={css.input} type=\"text\" name=\"name\" required />\n            </label>\n            <label className={css.label}>\n                <span className={css.nameInput}>Number</span>\n                <input className={css.input} type=\"tel\" name=\"number\" required />\n            </label>\n            <button className={css.button} type=\"submit\">Add contact</button>\n        </form>\n    )\n};","import css from '../Styles.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n        return(\n            <>\n                <label className={css.label}>\n                <span className={css.nameInput}>Find contacts by name</span>\n                <input \n                value={filterWithState}\n                className={css.input} \n                type=\"text\" \n                name=\"filter\" \n                onChange={updateStateForFilter}\n                />\n            </label>\n            </>\n        )\n}","import css from '../Styles.module.css';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/opertions';\nimport { selectNumbsForImg, selectBackgrounds, selectBackgroundImages, selectBgGeneral, selectReservedBG } from '../../redux/selectors';\nimport { deleteNumb } from '../../redux/backgroundImgSlice';\nimport { useEffect, useState } from 'react';\n\nexport const ItemContact = ({contact, index}) => {\n    const extraReservedImg = 'https://lh3.googleusercontent.com/pw/ABLVV857Vcs93eVOrm0Pm8WnNvcJSKLX3arSslyCmWpj-7cuG6ywCsjBpMiPRikFXgiC2xK8v2En5xPEynswskO4l7gjBpdWNWzhFRyOj8BJ3orxfjDDlbSF1EOr7mROLVTTOvdNiJhvM432128-GmRqOrEKcQ=w1500-h1000-s-no-gm?authuser=0';\n\n    const dispatch = useDispatch();\n    const numbsForImg = useSelector(selectNumbsForImg);\n    const backgrounds = useSelector(selectBackgrounds);\n\n    const lengthBgImages = useSelector(selectBackgroundImages).length;\n    const objBgGeneral = useSelector(selectBgGeneral);\n    const bgGeneral = objBgGeneral ? objBgGeneral.img : 'https://lh3.googleusercontent.com/pw/ABLVV84w_pNrNk2EMyul9WEZQIGgWoLvREgHEC97b4Mf15Ks5Hoqt7v7nc07QVJrbIMlK2LWegS0dAQKL6yuKPxHGHqTDwlQOCxOMGTWtrhzl73nYIFv9CWK4h9QUB2dvOTMfXj-twNVuqOHLhczMnZRTAvECg=w1920-h1080-s-no-gm?authuser=0';\n    const objReservedBg = useSelector(selectReservedBG);\n    const reservedBG = objReservedBg ? objReservedBg.img : extraReservedImg;\n   \n    \n\n    const updateStateForDelete = () => {\n        const idContact = contact.id;\n        dispatch(deleteContact(idContact));\n        dispatch(deleteNumb());\n        };\n\n    const [reservedImg, setReservedImg] = useState(extraReservedImg);\n\n    useEffect(() => {\n        if(lengthBgImages > 1){\n            setReservedImg(reservedBG);\n        } else if(lengthBgImages === 1){\n            setReservedImg(bgGeneral);\n        } else {\n            setReservedImg(extraReservedImg);\n        }\n    }, [lengthBgImages, bgGeneral, reservedBG, reservedImg]);\n\n    const lengthNumbsForImg = numbsForImg.length;\n    let numb = 1;\n\n    if (index >= lengthNumbsForImg){\n        numb = numbsForImg[index % lengthNumbsForImg];\n    } else {\n        numb = numbsForImg[index];\n    }\n\n    const img = backgrounds[numb] ? backgrounds[numb].img : null;\n\n    return(\n        <div className={css.firstDivItemContact}\n        style={{\n            backgroundImage: `url(${img || reservedImg})`,\n            backgroundSize: 'cover', \n            backgroundPosition: 'center', \n            }}>\n                <div className={css.divItemContact}>\n                    <h2 className={css.pItemContactsName}>{contact.name}:</h2> \n                    <p className={css.pItemContactsNumber}>{contact.phone}</p>\n                    <button id={contact.id} className={css.buttonDelete} type='button' onClick={updateStateForDelete}>\n                        Delete\n                    </button>\n                </div>\n        </div>\n    )\n}","import css from \"../Styles.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { ItemContact } from \"components/ItemContact/ItemContact\";\nimport { selectContacts, selectFilter } from \"../../redux/selectors\";\nimport { useRef, useEffect } from \"react\";\n\nexport const UlForCL = () => {\n    let contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n\n    const listContacts = useRef(null);\n    const itemContact = useRef([]);\n\n    if(filter.length > 0) {\n        contacts = contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    };\n\n    useEffect(() => {\n        const itemsContact = document.querySelectorAll('.itemContact');\n\n        const forScroll = () => {\n            itemsContact.forEach(item => readRectItem(item));\n        };\n\n        listContacts.current.addEventListener('scroll', forScroll);\n\n        const autoScroll = (item, conditionForAutoSc = 0) => {\n            itemsContact.forEach(i => i.classList.remove(css.itemContactActive));\n                    item.classList.add(css.itemContactActive);\n                    const scrollLForList = listContacts.current.scrollLeft;\n                    listContacts.current.style.scrollBehavior = 'smooth';\n                    if(conditionForAutoSc !== 0){\n                        listContacts.current.scrollLeft = scrollLForList + conditionForAutoSc;\n                    };\n\n                    listContacts.current.removeEventListener('scroll', forScroll);\n                    setTimeout(() => {\n                        listContacts.current.addEventListener('scroll', forScroll);\n                    }, 1000);\n        };\n\n        itemsContact.forEach(item => item.addEventListener('click', () => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            if(rectItem.x < rectListContacts.x + rectListContacts.width/2) {\n                const conditionForAutoSc = 0 - rectListContacts.width/2 + rectItem.x + 280;\n                autoScroll(item, conditionForAutoSc);\n            } else {\n                const conditionForAutoSc = 0  - rectListContacts.width/2 + rectItem.x + 80;\n                autoScroll(item, conditionForAutoSc);\n            }\n        }));\n\n        const readRectItem = (item) => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            const startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 - 200;\n            const secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 200;\n            if(rectItem.x > startActive && \n                rectItem.x < rectListContacts.x + rectListContacts.width/2 &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 - rectItem.width/2 + 200;\n                autoScroll(item, conditionForAutoSc);\n            } else if(rectItem.x > rectListContacts.x + rectListContacts.width/2 && \n                rectItem.x < secondStAct &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 + rectItem.width/2 - 100;\n                    autoScroll(item, conditionForAutoSc);\n                }\n        };\n    }, [contacts]);\n\n    return(\n        <ul ref={listContacts} className={css.listContacts}>\n            {contacts.length !== 0 &&\n                contacts.map((contact, index) => { \n                    \n                    return(\n                    <li ref={itemContact[index]} key={contact.id} className={[css.itemContact, 'itemContact'].join(' ')}>\n                    <ItemContact \n                        contact={contact}\n                        index={contacts.indexOf(contact)}\n                        key={contact.id}\n                    />\n                    </li>\n                )})\n            }\n        </ul>\n    )\n};","import styled, { keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContaiter = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\n`;\n\nconst RollerContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RollerDiv = styled.div`\n  animation: ${rotate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  transform-origin: 40px 40px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #000;\n    margin: -4px 0 0 -4px;\n  }\n`;\n\nconst RollerItem = styled(RollerDiv)`\n  &:nth-child(1) {\n    animation-delay: -0.036s;\n    &:after {\n      top: 63px;\n      left: 63px;\n    }\n  }\n  &:nth-child(2) {\n    animation-delay: -0.072s;\n    &:after {\n      top: 68px;\n      left: 56px;\n    }\n  }\n  &:nth-child(3) {\n    animation-delay: -0.108s;\n    &:after {\n      top: 71px;\n      left: 48px;\n    }\n  }\n  &:nth-child(4) {\n    animation-delay: -0.144s;\n    &:after {\n      top: 72px;\n      left: 40px;\n    }\n  }\n  &:nth-child(5) {\n    animation-delay: -0.18s;\n    &:after {\n      top: 71px;\n      left: 32px;\n    }\n  }\n  &:nth-child(6) {\n    animation-delay: -0.216s;\n    &:after {\n      top: 68px;\n      left: 24px;\n    }\n  }\n  &:nth-child(7) {\n    animation-delay: -0.252s;\n    &:after {\n      top: 63px;\n      left: 17px;\n    }\n  }\n  &:nth-child(8) {\n    animation-delay: -0.288s;\n    &:after {\n      top: 56px;\n      left: 12px;\n    }\n  }\n`;\n\nexport const Loader = () => {\n    return(\n    <LoaderContaiter>\n        <RollerContainer>\n    {[...Array(8)].map((_, index) => (\n    <RollerItem key={index} />\n    ))}\n    </RollerContainer>\n    </LoaderContaiter>\n    )};","import css from '../Styles.module.css';\nimport { UlForCL } from 'components/UlForCL/UlForCL';\nimport { selectIsLoading, selectError, selectNumbsForImg, selectBackgrounds, selectBgGeneral } from '../../redux/selectors';\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/opertions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loader } from \"../Loader/Loader\";\nimport { searchForBackground } from '../../redux/searchForStyles';\nimport { createNumbs } from '../../redux/backgroundImgSlice';\n\nexport const ContactList = () => {\n    \n    const backgrounds = useSelector(selectBackgrounds);\n    const numbsForImg = useSelector(selectNumbsForImg);\n\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    const bgGeneral = useSelector(selectBgGeneral)\n    const imgForBackground = bgGeneral ? bgGeneral.img : 'https://lh3.googleusercontent.com/pw/ABLVV84w_pNrNk2EMyul9WEZQIGgWoLvREgHEC97b4Mf15Ks5Hoqt7v7nc07QVJrbIMlK2LWegS0dAQKL6yuKPxHGHqTDwlQOCxOMGTWtrhzl73nYIFv9CWK4h9QUB2dvOTMfXj-twNVuqOHLhczMnZRTAvECg=w1920-h1080-s-no-gm?authuser=0';\n    \n    const makeMassifNumbs = () => {\n        const massifNumbers = [];\n        const lengthImgMas = backgrounds.length - 1;\n        function createMassNumbs (){\n            const randomNumb = Math.floor(Math.random() * lengthImgMas);\n        const lengthMasNumb = massifNumbers.length;\n        if( massifNumbers[lengthMasNumb-1] !== randomNumb &&\n            massifNumbers[lengthMasNumb-2] !== randomNumb &&\n            massifNumbers[lengthMasNumb-3] !== randomNumb &&\n            massifNumbers[lengthMasNumb-4] !== randomNumb &&\n            massifNumbers[lengthMasNumb-5] !== randomNumb ){\n            massifNumbers.push(randomNumb);\n        } else {\n            createMassNumbs();\n        }\n        };\n        for (let i = 0; i <= lengthImgMas; i++){\n            createMassNumbs();\n        }\n        return massifNumbers\n    };\n\n    useEffect(() => {\n        if (numbsForImg.length < backgrounds.length){\n        dispatch(createNumbs(makeMassifNumbs()));\n        };\n    });\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n        dispatch(searchForBackground());\n    }, [dispatch]);\n\n    \n\n\n\n    return(\n        <>\n        {!error ? (\n        <h2>Oopsss...Something went wrong...</h2>\n        ) : (\n        <div id='divForContactList' className={css.divForContactList} \n            style={{\n                backgroundImage: `url(${imgForBackground})`,\n                backgroundSize: 'cover', \n                backgroundPosition: 'center', \n                }}>\n                {isLoading && !error ? <Loader /> : <UlForCL />}\n            </div>\n            )}\n        </>\n    )\n}","import css from '../Styles.module.css';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst PageUsers = () => {\n    return(\n        <>\n        <h1 className={css.phonebook}>Phonebook</h1>\n  <ContactForm />\n\n  <h2 className={css.contacts}>Contacts</h2>\n  <Filter />\n  <ContactList />\n        </>\n    )\n};\n\nexport default PageUsers;","// extracted by mini-css-extract-plugin\nexport default {\"allDivHome\":\"Styles_allDivHome__jbALI\",\"greetingHome\":\"Styles_greetingHome__z-dSF\",\"hllGreetingHome\":\"Styles_hllGreetingHome__r7sZP\",\"logoNameGreetingHome\":\"Styles_logoNameGreetingHome__93Gw1\",\"buttonsHome\":\"Styles_buttonsHome__PuaUr\",\"buttonHome\":\"Styles_buttonHome__Biz2S\",\"logoNameBtnHome\":\"Styles_logoNameBtnHome__Ex290\",\"titleRegisterForm\":\"Styles_titleRegisterForm__qBE3X\",\"registerForm\":\"Styles_registerForm__nLtK-\",\"labelRegisterForm\":\"Styles_labelRegisterForm__lQVe4\",\"pRegisterForm\":\"Styles_pRegisterForm__-yZ-i\",\"inputRegisterForm\":\"Styles_inputRegisterForm__qO7Vy\",\"buttonRegisterForm\":\"Styles_buttonRegisterForm__TwkKs\",\"phonebook\":\"Styles_phonebook__DizvF\",\"contacts\":\"Styles_contacts__PVMZk\",\"form\":\"Styles_form__bzIrT\",\"label\":\"Styles_label__bjvd4\",\"input\":\"Styles_input__Veeqe\",\"button\":\"Styles_button__rzqu5\",\"nameInput\":\"Styles_nameInput__2AiKR\",\"divForContactList\":\"Styles_divForContactList__Ofiyn\",\"listContacts\":\"Styles_listContacts__SuTGr\",\"itemContact\":\"Styles_itemContact__64PYw\",\"itemContactActive\":\"Styles_itemContactActive__g5AvF\",\"firstDivItemContact\":\"Styles_firstDivItemContact__qg5NT\",\"divItemContact\":\"Styles_divItemContact__azqCU\",\"pItemContactsName\":\"Styles_pItemContactsName__ZaW5M\",\"pItemContactsNumber\":\"Styles_pItemContactsNumber__mAeQH\",\"buttonDelete\":\"Styles_buttonDelete__Et1oD\"};"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectBackgroundImages","backgroundImages","images","blackListImages","selectBgGeneral","createSelector","length","bgGeneral","push","id","selectReservedBG","reservedBG","selectBackgrounds","blackList","img","includes","Number","selectNumbsForImg","numbsForImg","ContactForm","dispatch","useDispatch","namesContacts","useSelector","map","contact","name","_jsxs","className","css","onSubmit","evt","preventDefault","newName","currentTarget","elements","value","some","toLowerCase","alert","concat","newNumb","number","dataForAdd","phone","addContact","reset","children","_jsx","type","required","Filter","filterWithState","_Fragment","onChange","filterValue","target","setFilter","ItemContact","_ref","index","extraReservedImg","backgrounds","lengthBgImages","objBgGeneral","objReservedBg","_useState","useState","_useState2","_slicedToArray","reservedImg","setReservedImg","useEffect","lengthNumbsForImg","numb","style","backgroundImage","backgroundSize","backgroundPosition","onClick","idContact","deleteContact","deleteNumb","UlForCL","listContacts","useRef","itemContact","itemsContact","document","querySelectorAll","forScroll","forEach","item","readRectItem","current","addEventListener","autoScroll","conditionForAutoSc","arguments","undefined","i","classList","remove","add","scrollLForList","scrollLeft","scrollBehavior","removeEventListener","setTimeout","rectItem","getBoundingClientRect","rectListContacts","x","width","startActive","secondStAct","contains","ref","join","indexOf","rotate","keyframes","_templateObject","_taggedTemplateLiteral","LoaderContaiter","styled","_templateObject2","RollerContainer","_templateObject3","RollerDiv","_templateObject4","RollerItem","_templateObject5","Loader","_toConsumableArray","Array","_","ContactList","imgForBackground","createNumbs","massifNumbers","lengthImgMas","createMassNumbs","randomNumb","Math","floor","random","lengthMasNumb","makeMassifNumbs","fetchContacts","searchForBackground"],"sourceRoot":""}