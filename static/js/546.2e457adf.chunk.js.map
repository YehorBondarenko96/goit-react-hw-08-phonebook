{"version":3,"file":"static/js/546.2e457adf.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selectors.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Styles.module.css?0d1d","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ChangingCWindow/ChangingCWindow.module.css?6ea6","components/ChangingCWindow/ChangingCWindow.jsx","components/ItemContact/ItemContact.jsx","components/UlForCL/UlForCL.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/PageUsers/PageUsers.module.css?51bf","components/PageUsers/PageUsers.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDivContactFormActive\":\"ContactForm_modalDivContactFormActive__iqPeh\",\"divForMiniContactForm\":\"ContactForm_divForMiniContactForm__GE+KH\",\"firstDivContactFormActive\":\"ContactForm_firstDivContactFormActive__ULKpq\",\"buttonAddMiniContactForm\":\"ContactForm_buttonAddMiniContactForm__HTUv0\",\"firstDivContactForm\":\"ContactForm_firstDivContactForm__IX7sb\",\"divContactForm\":\"ContactForm_divContactForm__rz08u\",\"formContactForm\":\"ContactForm_formContactForm__EZbe8\",\"labelContactForm\":\"ContactForm_labelContactForm__ocuDM\",\"inputContactForm\":\"ContactForm_inputContactForm__h2PrQ\",\"buttonContactForm\":\"ContactForm_buttonContactForm__lTw1p\",\"nameInputContactForm\":\"ContactForm_nameInputContactForm__lolmN\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectBackgroundImages = state => state.backgroundImages.images;\n\nconst blackListImages = [926728, 2325627, 2004483, 1911637, 1365995, 2750627, 11080, 5422901];\n\nexport const selectBgGeneral = createSelector(\n    [selectBackgroundImages],\n    (backgroundImages) => {\n        if (backgroundImages.length > 0){\n            const bgGeneral = backgroundImages[0];\n        blackListImages.push(bgGeneral.id);\n        return bgGeneral\n    }\n    }\n);\n\nexport const selectReservedBG = createSelector(\n    [selectBackgroundImages],\n    (backgroundImages) => {\n        if (backgroundImages.length > 1){\n            const reservedBG = backgroundImages[1];\n            blackListImages.push(reservedBG.id);\n            return reservedBG\n        } \n    }\n);\n\nexport const selectBackgrounds = createSelector(\n    [selectBackgroundImages, () => blackListImages],\n    (backgroundImages, blackList) => {\n        const backgrounds = backgroundImages.filter(img => !blackList.includes(Number(img.id)));\n        return backgrounds;\n    }\n);\n\nexport const selectNumbsForImg = state => state.backgroundImages.numbsForImg;\n\nexport const selectScrollLeftLists = state => state.contacts.scrollLeftLists;","import { addContact } from '../../redux/opertions';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\n// import { click } from '@testing-library/user-event/dist/click';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const namesContacts = useSelector(selectContacts).map(contact => contact.name);\n\n    const updateStateForAdd = (evt) => {\n        evt.preventDefault();\n        const newName = evt.currentTarget.elements.name.value;\n        \n        if(!namesContacts.some(name => name.toLowerCase() === newName.toLowerCase())){\n            const newNumb = evt.currentTarget.elements.number.value;\n            const dataForAdd = {\n                name: newName,\n                number: newNumb\n            }\n            dispatch(addContact(dataForAdd));\n            evt.currentTarget.reset();\n            removeClasses();\n        } else{\n            alert(`${newName} is already in contacts.`)\n        }\n        };\n\n        function forAddButton(){\n            const modalDivContactForm = document.querySelector('.modalDivContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n\n            modalDivContactForm.classList.add(css.modalDivContactFormActive);\n            firstDivContactForm.classList.add(css.firstDivContactFormActive);\n\n            modalDivContactForm.addEventListener('click', removeClasses)\n        };\n\n        const removeClasses = (e) => {\n            const modalDivContactForm = document.querySelector('.modalDivContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n            if(e){\n            if (e.target.classList.contains(css.modalDivContactFormActive)){\n            modalDivContactForm.removeEventListener('click', removeClasses);\n            modalDivContactForm.classList.remove(css.modalDivContactFormActive);\n            firstDivContactForm.classList.remove(css.firstDivContactFormActive);\n            };\n        } else{\n            modalDivContactForm.removeEventListener('click', removeClasses);\n            modalDivContactForm.classList.remove(css.modalDivContactFormActive);\n            firstDivContactForm.classList.remove(css.firstDivContactFormActive);\n        }\n        };\n\n    return (\n        <div className={[css.modalDivContactForm, 'modalDivContactForm'].join(' ')}>\n            <div className={[css.firstDivContactForm, 'firstDivContactForm'].join(' ')}>\n                <div className={css.divForMiniContactForm}>\n                    <button className={css.buttonAddMiniContactForm} type='button' onClick={forAddButton}>\n                        Add\n                    </button>\n                    </div>\n                <div className={css.divContactForm}>\n\n                <form className={css.formContactForm} onSubmit={updateStateForAdd}>\n            <label className={css.labelContactForm}>\n                <span className={css.nameInputContactForm}>Name</span>\n            <input className={css.inputContactForm} type=\"text\" name=\"name\" required />\n            </label>\n            <label className={css.labelContactForm}>\n                <span className={css.nameInputContactForm}>Number</span>\n                <input className={css.inputContactForm} type=\"tel\" name=\"number\" required />\n            </label>\n            <button className={css.buttonContactForm} type=\"submit\">Add contact</button>\n        </form>\n                </div>\n        </div>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"divForContactList\":\"Styles_divForContactList__Ofiyn\",\"listContacts\":\"Styles_listContacts__SuTGr\",\"itemContact\":\"Styles_itemContact__64PYw\",\"itemContactActive\":\"Styles_itemContactActive__g5AvF\",\"firstDivItemContact\":\"Styles_firstDivItemContact__qg5NT\",\"divItemContact\":\"Styles_divItemContact__azqCU\",\"pItemContactsName\":\"Styles_pItemContactsName__ZaW5M\",\"pItemContactsNumber\":\"Styles_pItemContactsNumber__mAeQH\",\"buttonDelete\":\"Styles_buttonDelete__Et1oD\",\"changeCBut\":\"Styles_changeCBut__smBip\"};","import css from '../Styles.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n        return(\n            <>\n                <label className={css.label}>\n                <span className={css.nameInput}>Find contacts by name</span>\n                <input \n                value={filterWithState}\n                className={css.input} \n                type=\"text\" \n                name=\"filter\" \n                onChange={updateStateForFilter}\n                />\n            </label>\n            </>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"formChangingCWindow\":\"ChangingCWindow_formChangingCWindow__Ly6Lz\",\"labelChangingCWindow\":\"ChangingCWindow_labelChangingCWindow__8hyzk\",\"inputChangingCWindow\":\"ChangingCWindow_inputChangingCWindow__U+AvV\",\"buttonsChangingCWindow\":\"ChangingCWindow_buttonsChangingCWindow__CIoc1\",\"buttonChangingCWindow\":\"ChangingCWindow_buttonChangingCWindow__QQGd6\",\"nameInputChangingCWindow\":\"ChangingCWindow_nameInputChangingCWindow__qtQsA\"};","import css from './ChangingCWindow.module.css';\n\nexport const ChangingCWindow = ({closeChangingCWindow, name, number}) => {\n    return(\n            <form className={css.formChangingCWindow} >\n                <label className={css.labelChangingCWindow}>\n                    <span className={css.nameInputChangingCWindow}>Name</span>\n                <input className={css.inputChangingCWindow} \n                defaultValue={name}\n                type=\"text\" \n                name=\"name\" \n                required \n                />\n                </label>\n                <label className={css.labelChangingCWindow}>\n                        <span className={css.nameInputChangingCWindow}>Number</span>\n                    <input className={css.inputChangingCWindow}\n                    defaultValue={number}\n                    type=\"tel\"\n                    name=\"number\" \n                    required \n                    />\n                </label>\n                <div className={css.buttonsChangingCWindow}>\n                <button className={css.buttonChangingCWindow} type=\"button\" onClick={closeChangingCWindow}>Changen't contact</button>\n                <button className={css.buttonChangingCWindow} type=\"submit\">Change contact</button>\n                </div>\n            </form>\n    )\n};","import css from '../Styles.module.css';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/opertions';\nimport { selectNumbsForImg, selectBackgrounds, selectBackgroundImages, selectBgGeneral, selectReservedBG } from '../../redux/selectors';\nimport { deleteNumb } from '../../redux/backgroundImgSlice';\nimport { useEffect, useState } from 'react';\nimport { ChangingCWindow } from '../ChangingCWindow/ChangingCWindow';\nimport { setScrollLeftLists } from '../../redux/contactsSlice';\n\nexport const ItemContact = ({contact, index, id, activeId, actualScroll}) => {\n    const extraReservedImg = 'https://lh3.googleusercontent.com/pw/ABLVV857Vcs93eVOrm0Pm8WnNvcJSKLX3arSslyCmWpj-7cuG6ywCsjBpMiPRikFXgiC2xK8v2En5xPEynswskO4l7gjBpdWNWzhFRyOj8BJ3orxfjDDlbSF1EOr7mROLVTTOvdNiJhvM432128-GmRqOrEKcQ=w1500-h1000-s-no-gm?authuser=0';\n\n    const dispatch = useDispatch();\n    const numbsForImg = useSelector(selectNumbsForImg);\n    const backgrounds = useSelector(selectBackgrounds);\n\n    const lengthBgImages = useSelector(selectBackgroundImages).length;\n    const objBgGeneral = useSelector(selectBgGeneral);\n    const bgGeneral = objBgGeneral ? objBgGeneral.img : 'https://lh3.googleusercontent.com/pw/ABLVV84w_pNrNk2EMyul9WEZQIGgWoLvREgHEC97b4Mf15Ks5Hoqt7v7nc07QVJrbIMlK2LWegS0dAQKL6yuKPxHGHqTDwlQOCxOMGTWtrhzl73nYIFv9CWK4h9QUB2dvOTMfXj-twNVuqOHLhczMnZRTAvECg=w1920-h1080-s-no-gm?authuser=0';\n    const objReservedBg = useSelector(selectReservedBG);\n    const reservedBG = objReservedBg ? objReservedBg.img : extraReservedImg;\n\n    const [activeChanging, setActiveChenging] = useState(false);\n\n    const updateStateForDelete = () => {\n        const idContact = contact.id;\n        dispatch(deleteContact(idContact));\n        dispatch(deleteNumb());\n        dispatch(setScrollLeftLists(actualScroll));\n        };\n\n    const [reservedImg, setReservedImg] = useState(extraReservedImg);\n\n    useEffect(() => {\n        if(lengthBgImages > 1){\n            setReservedImg(reservedBG);\n        } else if(lengthBgImages === 1){\n            setReservedImg(bgGeneral);\n        } else {\n            setReservedImg(extraReservedImg);\n        }\n    }, [lengthBgImages, bgGeneral, reservedBG, reservedImg]);\n\n    const lengthNumbsForImg = numbsForImg.length;\n    let numb = 1;\n\n    if (index >= lengthNumbsForImg){\n        numb = numbsForImg[index % lengthNumbsForImg];\n    } else {\n        numb = numbsForImg[index];\n    }\n\n    const img = backgrounds[numb] ? backgrounds[numb].img : null;\n\n    const closeChangingCWindow = () => {setActiveChenging(false)};\n\n    useEffect(() => {\n        if(id !== activeId){\n            setActiveChenging(false)\n        }\n    }, [activeId, id]);\n\n    return(\n        <div className={css.firstDivItemContact}\n        style={{\n            backgroundImage: `url(${img || reservedImg})`,\n            backgroundSize: 'cover', \n            backgroundPosition: 'center', \n            }}>\n                <div className={css.divItemContact}>\n                    <h2 className={css.pItemContactsName}>{contact.name}</h2> \n                    <p className={css.pItemContactsNumber}>{contact.number}</p>\n                    <button id={contact.id} className={css.buttonDelete} type='button' onClick={updateStateForDelete}>\n                        Delete\n                    </button>\n                    <button type='button' className={css.changeCBut} onClick = {() => setActiveChenging(true)}>\n                        Change contact\n                    </button>\n                    {activeChanging && \n                    <ChangingCWindow \n                    closeChangingCWindow = {closeChangingCWindow} \n                    name = {contact.name}\n                    number = {contact.number}\n                    />}\n                </div>\n        </div>\n    )\n}","import css from \"../Styles.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ItemContact } from \"components/ItemContact/ItemContact\";\nimport { selectContacts, selectFilter, selectScrollLeftLists } from \"../../redux/selectors\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { setScrollLeftLists } from \"../../redux/contactsSlice\";\n\nexport const UlForCL = () => {\n    const dispatch = useDispatch();\n    let contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const scrollLeftLists = useSelector(selectScrollLeftLists);\n\n    const [activeId, setActiveId] = useState(null);\n    const [actualScroll, setActualScroll] = useState(0);\n\n    const listContacts = useRef(null);\n\n\n\n    useEffect(() => {\n        if(scrollLeftLists > 0){\n            if(listContacts.current){\n                listContacts.current.scrollLeft = scrollLeftLists;\n                dispatch(setScrollLeftLists(0));\n            }\n        }\n    });\n\n    if(filter.length > 0) {\n        contacts = contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    };\n\n    useEffect(() => {\n        const itemsContact = document.querySelectorAll('.itemContact');\n\n        const forScroll = () => {\n            setActualScroll(listContacts.current.scrollLeft);\n            itemsContact.forEach(item => readRectItem(item));\n        };\n\n        listContacts.current.addEventListener('scroll', forScroll);\n\n        const autoScroll = (item, conditionForAutoSc = 0) => {\n            itemsContact.forEach(i => i.classList.remove(css.itemContactActive));\n                    item.classList.add(css.itemContactActive);\n                    setActiveId(item.getAttribute('id'));\n                    const scrollLForList = listContacts.current.scrollLeft;\n                    listContacts.current.style.scrollBehavior = 'smooth';\n                    if(conditionForAutoSc !== 0){\n                        listContacts.current.scrollLeft = scrollLForList + conditionForAutoSc;\n                    };\n\n                    listContacts.current.removeEventListener('scroll', forScroll);\n                    \n                    setTimeout(() => {\n                        if(listContacts.current){\n                            listContacts.current.addEventListener('scroll', forScroll);\n                        }\n                    }, 250);\n        };\n\n        itemsContact.forEach(item => item.addEventListener('click', () => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            if(rectItem.x < rectListContacts.x + rectListContacts.width/2) {\n                const conditionForAutoSc = 0 - rectListContacts.width/2 + rectItem.x + 280;\n                autoScroll(item, conditionForAutoSc);\n            } else {\n                const conditionForAutoSc = 0  - rectListContacts.width/2 + rectItem.x + 80;\n                autoScroll(item, conditionForAutoSc);\n            }\n        }));\n\n        const readRectItem = (item) => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            const startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 - 200;\n            const secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 200;\n            if(rectItem.x > startActive && \n                rectItem.x < rectListContacts.x + rectListContacts.width/2 &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 - rectItem.width/2 + 200;\n                autoScroll(item, conditionForAutoSc);\n            } else if(rectItem.x > rectListContacts.x + rectListContacts.width/2 && \n                rectItem.x < secondStAct &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 + rectItem.width/2 - 100;\n                    autoScroll(item, conditionForAutoSc);\n                }\n        };\n    }, [contacts]);\n\n    return(\n        <ul ref={listContacts} className={css.listContacts}>\n            {contacts.length !== 0 &&\n                contacts.map((contact) => { \n                    return(\n                    <li key={contact.id} id={contact.id} className={[css.itemContact, 'itemContact'].join(' ')}>\n                    <ItemContact \n                        contact={contact}\n                        index={contacts.indexOf(contact)}\n                        id={contact.id}\n                        activeId={activeId}\n                        actualScroll={actualScroll}\n                    />\n                    </li>\n                )})\n            }\n        </ul>\n    )\n};","import styled, { keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContaiter = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\n`;\n\nconst RollerContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RollerDiv = styled.div`\n  animation: ${rotate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  transform-origin: 40px 40px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #000;\n    margin: -4px 0 0 -4px;\n  }\n`;\n\nconst RollerItem = styled(RollerDiv)`\n  &:nth-child(1) {\n    animation-delay: -0.036s;\n    &:after {\n      top: 63px;\n      left: 63px;\n    }\n  }\n  &:nth-child(2) {\n    animation-delay: -0.072s;\n    &:after {\n      top: 68px;\n      left: 56px;\n    }\n  }\n  &:nth-child(3) {\n    animation-delay: -0.108s;\n    &:after {\n      top: 71px;\n      left: 48px;\n    }\n  }\n  &:nth-child(4) {\n    animation-delay: -0.144s;\n    &:after {\n      top: 72px;\n      left: 40px;\n    }\n  }\n  &:nth-child(5) {\n    animation-delay: -0.18s;\n    &:after {\n      top: 71px;\n      left: 32px;\n    }\n  }\n  &:nth-child(6) {\n    animation-delay: -0.216s;\n    &:after {\n      top: 68px;\n      left: 24px;\n    }\n  }\n  &:nth-child(7) {\n    animation-delay: -0.252s;\n    &:after {\n      top: 63px;\n      left: 17px;\n    }\n  }\n  &:nth-child(8) {\n    animation-delay: -0.288s;\n    &:after {\n      top: 56px;\n      left: 12px;\n    }\n  }\n`;\n\nexport const Loader = () => {\n    return(\n    <LoaderContaiter>\n        <RollerContainer>\n    {[...Array(8)].map((_, index) => (\n    <RollerItem key={index} />\n    ))}\n    </RollerContainer>\n    </LoaderContaiter>\n    )};","import css from '../Styles.module.css';\nimport { UlForCL } from 'components/UlForCL/UlForCL';\nimport { selectIsLoading, selectError, selectNumbsForImg, selectBackgrounds, selectBgGeneral } from '../../redux/selectors';\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/opertions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loader } from \"../Loader/Loader\";\nimport { createNumbs } from '../../redux/backgroundImgSlice';\n\nexport const ContactList = () => {\n    \n    const backgrounds = useSelector(selectBackgrounds);\n    const numbsForImg = useSelector(selectNumbsForImg);\n\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    const bgGeneral = useSelector(selectBgGeneral)\n    const imgForBackground = bgGeneral ? bgGeneral.img : 'https://lh3.googleusercontent.com/pw/ABLVV84w_pNrNk2EMyul9WEZQIGgWoLvREgHEC97b4Mf15Ks5Hoqt7v7nc07QVJrbIMlK2LWegS0dAQKL6yuKPxHGHqTDwlQOCxOMGTWtrhzl73nYIFv9CWK4h9QUB2dvOTMfXj-twNVuqOHLhczMnZRTAvECg=w1920-h1080-s-no-gm?authuser=0';\n    \n    const makeMassifNumbs = () => {\n        const massifNumbers = [];\n        const lengthImgMas = backgrounds.length - 1;\n        function createMassNumbs (){\n            const randomNumb = Math.floor(Math.random() * lengthImgMas);\n        const lengthMasNumb = massifNumbers.length;\n        if( massifNumbers[lengthMasNumb-1] !== randomNumb &&\n            massifNumbers[lengthMasNumb-2] !== randomNumb &&\n            massifNumbers[lengthMasNumb-3] !== randomNumb &&\n            massifNumbers[lengthMasNumb-4] !== randomNumb &&\n            massifNumbers[lengthMasNumb-5] !== randomNumb ){\n            massifNumbers.push(randomNumb);\n        } else {\n            createMassNumbs();\n        }\n        };\n        for (let i = 0; i <= lengthImgMas; i++){\n            createMassNumbs();\n        }\n        return massifNumbers\n    };\n\n    useEffect(() => {\n        if (numbsForImg.length < backgrounds.length){\n        dispatch(createNumbs(makeMassifNumbs()));\n        };\n    });\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    \n\n\n\n    return(\n        <>\n        {error ? (\n        <h2>Oopsss...Something went wrong...</h2>\n        ) : (\n        <div id='divForContactList' className={css.divForContactList} \n            style={{\n                backgroundImage: `url(${imgForBackground})`,\n                backgroundSize: 'cover', \n                backgroundPosition: 'center', \n                }}>\n                {isLoading && !error ? <Loader /> : <UlForCL />}\n            </div>\n            )}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"divContFiltPageUsers\":\"PageUsers_divContFiltPageUsers__JZL5M\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectToken } from '../../redux/workWithBackend/selectors';\nimport css from './PageUsers.module.css';\n\nconst PageUsers = () => {\n    const token = useSelector(selectToken);\n    if (token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    }\n    return(\n        <>\n        <div className={css.divContFiltPageUsers}>\n        <Filter />\n        <ContactForm />\n        </div>\n        <ContactList />\n        </>\n    )\n};\n\nexport default PageUsers;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectBackgroundImages","backgroundImages","images","blackListImages","selectBgGeneral","createSelector","length","bgGeneral","push","id","selectReservedBG","reservedBG","selectBackgrounds","blackList","img","includes","Number","selectNumbsForImg","numbsForImg","selectScrollLeftLists","scrollLeftLists","ContactForm","dispatch","useDispatch","namesContacts","useSelector","map","contact","name","removeClasses","e","modalDivContactForm","document","querySelector","firstDivContactForm","target","classList","contains","css","removeEventListener","remove","_jsx","className","join","children","_jsxs","type","onClick","add","addEventListener","onSubmit","evt","preventDefault","newName","currentTarget","elements","value","some","toLowerCase","alert","concat","newNumb","number","dataForAdd","addContact","reset","required","Filter","filterWithState","_Fragment","onChange","filterValue","setFilter","ChangingCWindow","_ref","closeChangingCWindow","defaultValue","ItemContact","index","activeId","actualScroll","extraReservedImg","backgrounds","lengthBgImages","objBgGeneral","objReservedBg","_useState","useState","_useState2","_slicedToArray","activeChanging","setActiveChenging","_useState3","_useState4","reservedImg","setReservedImg","useEffect","lengthNumbsForImg","numb","style","backgroundImage","backgroundSize","backgroundPosition","idContact","deleteContact","deleteNumb","setScrollLeftLists","UlForCL","setActiveId","setActualScroll","listContacts","useRef","current","scrollLeft","itemsContact","querySelectorAll","forScroll","forEach","item","readRectItem","autoScroll","conditionForAutoSc","arguments","undefined","i","getAttribute","scrollLForList","scrollBehavior","setTimeout","rectItem","getBoundingClientRect","rectListContacts","x","width","startActive","secondStAct","ref","indexOf","rotate","keyframes","_templateObject","_taggedTemplateLiteral","LoaderContaiter","styled","_templateObject2","RollerContainer","_templateObject3","RollerDiv","_templateObject4","RollerItem","_templateObject5","Loader","_toConsumableArray","Array","_","ContactList","imgForBackground","createNumbs","massifNumbers","lengthImgMas","createMassNumbs","randomNumb","Math","floor","random","lengthMasNumb","makeMassifNumbs","fetchContacts","token","selectToken","axios"],"sourceRoot":""}