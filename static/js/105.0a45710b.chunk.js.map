{"version":3,"file":"static/js/105.0a45710b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Styles.module.css?0d1d","webpack://goit-react-hw-08-phonebook/./src/components/ChangingCWindow/ChangingCWindow.module.css?6ea6","components/ChangingCWindow/ChangingCWindow.jsx","components/ItemContact/ItemContact.jsx","components/UlForCL/UlForCL.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/PageUsers/PageUsers.module.css?51bf","components/PageUsers/PageUsers.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDivContactFormActive\":\"ContactForm_modalDivContactFormActive__iqPeh\",\"divForMiniContactForm\":\"ContactForm_divForMiniContactForm__GE+KH\",\"firstDivContactFormActive\":\"ContactForm_firstDivContactFormActive__ULKpq\",\"buttonAddMiniContactForm\":\"ContactForm_buttonAddMiniContactForm__HTUv0\",\"divForMiniContactFormHover\":\"ContactForm_divForMiniContactFormHover__hDzTU\",\"firstDivContactForm\":\"ContactForm_firstDivContactForm__IX7sb\",\"divContactForm\":\"ContactForm_divContactForm__rz08u\",\"formContactForm\":\"ContactForm_formContactForm__EZbe8\",\"labelContactForm\":\"ContactForm_labelContactForm__ocuDM\",\"inputContactForm\":\"ContactForm_inputContactForm__h2PrQ\",\"buttonContactForm\":\"ContactForm_buttonContactForm__lTw1p\",\"nameInputContactForm\":\"ContactForm_nameInputContactForm__lolmN\"};","import { addContact } from '../../redux/opertions';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { useEffect } from 'react';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const namesContacts = useSelector(selectContacts).map(contact => contact.name);\n\n    const updateStateForAdd = (evt) => {\n        evt.preventDefault();\n        const newName = evt.currentTarget.elements.name.value;\n        \n        if(!namesContacts.some(name => name.toLowerCase() === newName.toLowerCase())){\n            const newNumb = evt.currentTarget.elements.number.value;\n            const dataForAdd = {\n                name: newName,\n                number: newNumb\n            }\n            dispatch(addContact(dataForAdd));\n            evt.currentTarget.reset();\n            removeClasses();\n        } else{\n            alert(`${newName} is already in contacts.`)\n        }\n        };\n\n        function forAddButton(){\n            const modalDivContactForm = document.querySelector('.modalDivContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n            const inputNameAdd = document.querySelector('.inputNameAdd');\n\n            modalDivContactForm.classList.add(css.modalDivContactFormActive);\n            firstDivContactForm.classList.add(css.firstDivContactFormActive);\n            \n            setTimeout(() => {\n                inputNameAdd.focus();\n            }, 100);\n\n            modalDivContactForm.addEventListener('click', removeClasses);\n            document.addEventListener('keydown', closeModalForEsc);\n        };\n\n        const closeModalForEsc = (e) => {\n            if(e.key === 'Escape'){\n                removeClasses();\n            }\n        };\n\n        const removeClasses = (e) => {\n            const modalDivContactForm = document.querySelector('.modalDivContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n            const inputsAdd = document.querySelectorAll('.inputsAdd');\n\n            function workRC(){\n                modalDivContactForm.removeEventListener('click', removeClasses);\n                document.removeEventListener('keydown', closeModalForEsc);\n                inputsAdd.forEach(input => input.blur());\n                modalDivContactForm.classList.remove(css.modalDivContactFormActive);\n                firstDivContactForm.classList.remove(css.firstDivContactFormActive);\n            };\n\n            if(e){\n            if (e.target.classList.contains(css.modalDivContactFormActive)){\n            workRC();\n            };\n        } else{\n            workRC();\n        }\n        };\n\n        useEffect(() => {\n            const divForMiniContactForm = document.querySelector('.divForMiniContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n            const labelFilter = document.querySelector('.labelFilter');\n\n            const forHoverEnter = () => {\n                firstDivContactForm.classList.add(css.divForMiniContactFormHover);\n                if(labelFilter){\n                    labelFilter.style.marginRight = '155px';\n                };\n            };\n            const forHoverLeave = () => {\n                firstDivContactForm.classList.remove(css.divForMiniContactFormHover);\n                if(labelFilter){\n                    labelFilter.style.marginRight = '130px';\n                };\n            };\n\n            divForMiniContactForm.addEventListener('mouseenter', forHoverEnter);\n            divForMiniContactForm.addEventListener('mouseleave', forHoverLeave);\n        });\n\n    return (\n        <div className={[css.modalDivContactForm, 'modalDivContactForm'].join(' ')}>\n            <div className={[css.firstDivContactForm, 'firstDivContactForm'].join(' ')}>\n                <div className={[css.divForMiniContactForm, 'divForMiniContactForm'].join(' ')}>\n                    <button className={css.buttonAddMiniContactForm} type='button' onClick={forAddButton}>\n                        Add\n                    </button>\n                    </div>\n                <div className={css.divContactForm}>\n\n                <form className={css.formContactForm} onSubmit={updateStateForAdd}>\n            <label className={css.labelContactForm}>\n                <span className={css.nameInputContactForm}>Name</span>\n            <input className={[css.inputContactForm,'inputNameAdd', 'inputsAdd'].join(' ')} type=\"text\" name=\"name\" required/>\n            </label>\n            <label className={css.labelContactForm}>\n                <span className={css.nameInputContactForm}>Number</span>\n                <input className={[css.inputContactForm, 'inputsAdd'].join(' ')} type=\"tel\" name=\"number\" required />\n            </label>\n            <button className={css.buttonContactForm} type=\"submit\">Add contact</button>\n        </form>\n                </div>\n        </div>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"labelFilter\":\"Filter_labelFilter__7SBy1\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\nimport { useState, useEffect } from 'react';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const [placeholderValue, setPlaceholderValue] = useState('');\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n    useEffect(() => {\n        const realScreenWidth = window.innerWidth;\n\n        if(realScreenWidth > 465){\n            setPlaceholderValue('Please start typing the desired name')\n        } else if(realScreenWidth <= 465 && realScreenWidth > 370){\n            setPlaceholderValue('Please start typing name')\n        } else {\n            setPlaceholderValue('Type name')\n        }\n    }, []);\n\n        return(\n            <label className={[css.labelFilter, 'labelFilter'].join(' ')}>\n                <input \n                value={filterWithState}\n                className={css.inputFilter} \n                type=\"text\" \n                name=\"filter\" \n                placeholder={placeholderValue}\n                onChange={updateStateForFilter}\n                />\n            </label>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"divForContactList\":\"Styles_divForContactList__Ofiyn\",\"listContacts\":\"Styles_listContacts__SuTGr\",\"itemContact\":\"Styles_itemContact__64PYw\",\"itemContactActive\":\"Styles_itemContactActive__g5AvF\",\"firstDivItemContact\":\"Styles_firstDivItemContact__qg5NT\",\"divItemContact\":\"Styles_divItemContact__azqCU\",\"pItemContactsName\":\"Styles_pItemContactsName__ZaW5M\",\"pItemContactsNumber\":\"Styles_pItemContactsNumber__mAeQH\",\"buttonDelete\":\"Styles_buttonDelete__Et1oD\",\"changeCBut\":\"Styles_changeCBut__smBip\"};","// extracted by mini-css-extract-plugin\nexport default {\"formChangingCWindow\":\"ChangingCWindow_formChangingCWindow__Ly6Lz\",\"labelChangingCWindow\":\"ChangingCWindow_labelChangingCWindow__8hyzk\",\"inputChangingCWindow\":\"ChangingCWindow_inputChangingCWindow__U+AvV\",\"buttonsChangingCWindow\":\"ChangingCWindow_buttonsChangingCWindow__CIoc1\",\"buttonChangingCWindow\":\"ChangingCWindow_buttonChangingCWindow__QQGd6\"};","import css from './ChangingCWindow.module.css';\nimport { useDispatch } from 'react-redux';\nimport { patchContact } from '../../redux/opertions';\nimport { setScrollLeftLists } from '../../redux/contactsSlice';\nimport { useEffect } from 'react';\n\nexport const ChangingCWindow = ({closeChangingCWindow, name, number, id }) => {\n    const dispatch = useDispatch();\n\n    const updateStateForPatch = (evt) => {\n        evt.preventDefault();\n        const newName = evt.currentTarget.elements.name.value;\n        const idContact = id;\n        const newNumb = evt.currentTarget.elements.number.value;\n        const dataForPatch = {\n            id: idContact,\n            name: newName,\n            number: newNumb\n        }\n        if(name !== newName || number !== newNumb){\n        dispatch(patchContact(dataForPatch));\n        evt.currentTarget.reset();\n        const contactsList = document.querySelector('.listContactsForGap');\n        const scrollUl = contactsList.scrollLeft;\n        dispatch(setScrollLeftLists(scrollUl));\n        } else {\n            closeChangingCWindow();\n        }\n        };\n\n        useEffect(() => {\n            let coef = 2;\n            const realScreenWidth = window.innerWidth;\n            const screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n            if(screenWidth < 800){\n                coef = 1.5\n            }\n            const nameInputChangingCWindowS = document.querySelectorAll('.nameInputChangingCWindow');\n            const inputChangingCWindowS = document.querySelectorAll('.inputChangingCWindow');\n            const buttonsChangingCWindow = document.querySelector('.buttonsChangingCWindow');\n            const buttonChangingCWindowS = document.querySelectorAll('.buttonChangingCWindow');\n            const labelChangingCWindowS = document.querySelectorAll('.labelChangingCWindow');\n            const formChangingCWindow = document.querySelector('.formChangingCWindow');\n            if(nameInputChangingCWindowS && inputChangingCWindowS && buttonsChangingCWindow && buttonChangingCWindowS\n                && labelChangingCWindowS && formChangingCWindow){\n                nameInputChangingCWindowS.forEach(i => i.style.fontSize = screenWidth/(coef * 21) + 'px');\n                inputChangingCWindowS.forEach(i => {\n                    i.style.width = screenWidth/(coef * 1.666667) + 'px';\n                    i.style.height = screenWidth/(coef * 12.5) + 'px';\n                    i.style.borderRadius = screenWidth/(coef * 50) + 'px';\n                    i.style.fontSize = screenWidth/(coef * 25) + 'px';\n                    i.style.paddingLeft = screenWidth/(coef * 50) + 'px';\n                    i.style.paddingRight = screenWidth/(coef * 50) + 'px';\n                    i.style.borderWidth = screenWidth/(coef * 500) + 'px';\n                });\n                buttonsChangingCWindow.style.width = screenWidth/(coef * 1.666667) + 'px';\n                buttonChangingCWindowS.forEach(i => {\n                    i.style.height = screenWidth/(coef * 16.66667) + 'px';\n                    i.style.borderRadius = screenWidth/(coef * 100) + 'px';\n                    i.style.fontSize = screenWidth/(coef * 35.7) + 'px';\n                });\n                labelChangingCWindowS.forEach(i => i.style.gap = screenWidth/(coef * 50) + 'px');\n                formChangingCWindow.style.gap = screenWidth/(coef * 25) + 'px';\n                formChangingCWindow.style.borderRadius = screenWidth/(coef * 25) + 'px';\n            }\n        }, []);\n\n    return(\n            <form className={[css.formChangingCWindow, 'formChangingCWindow'].join(' ')} onSubmit={updateStateForPatch}>\n                <label className={[css.labelChangingCWindow, 'labelChangingCWindow'].join(' ')}>\n                    <span className={[css.nameInputChangingCWindow, 'nameInputChangingCWindow'].join(' ')}>Name</span>\n                <input className={[css.inputChangingCWindow, 'inputChangingCWindow'].join(' ')} \n                defaultValue={name}\n                type=\"text\" \n                name=\"name\" \n                required \n                />\n                </label>\n                <label className={[css.labelChangingCWindow, 'labelChangingCWindow'].join(' ')}>\n                        <span className={[css.nameInputChangingCWindow, 'nameInputChangingCWindow'].join(' ')}>Number</span>\n                    <input className={[css.inputChangingCWindow, 'inputChangingCWindow'].join(' ')}\n                    defaultValue={number}\n                    type=\"tel\"\n                    name=\"number\" \n                    required \n                    />\n                </label>\n                <div className={[css.buttonsChangingCWindow, 'buttonsChangingCWindow'].join(' ')}>\n                <button className={[css.buttonChangingCWindow, 'buttonChangingCWindow'].join(' ')} type=\"button\" onClick={closeChangingCWindow}>Changen't contact</button>\n                <button className={[css.buttonChangingCWindow, 'buttonChangingCWindow'].join(' ')} type=\"submit\">Change contact</button>\n                </div>\n            </form>\n    )\n};","import css from '../Styles.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/opertions';\nimport { selectNumbsForImg, selectBackgrounds, selectBackgroundImages, selectBgGeneral, selectReservedBG } from '../../redux/selectors';\nimport { deleteNumb } from '../../redux/backgroundImgSlice';\nimport { useEffect, useState, useRef } from 'react';\nimport { ChangingCWindow } from '../ChangingCWindow/ChangingCWindow';\nimport { setScrollLeftLists } from '../../redux/contactsSlice';\n\nexport const ItemContact = ({contact, index, id, activeId}) => {\n    const extraReservedImg = 'https://lh3.googleusercontent.com/pw/ABLVV857Vcs93eVOrm0Pm8WnNvcJSKLX3arSslyCmWpj-7cuG6ywCsjBpMiPRikFXgiC2xK8v2En5xPEynswskO4l7gjBpdWNWzhFRyOj8BJ3orxfjDDlbSF1EOr7mROLVTTOvdNiJhvM432128-GmRqOrEKcQ=w1500-h1000-s-no-gm?authuser=0';\n\n    const dispatch = useDispatch();\n    const numbsForImg = useSelector(selectNumbsForImg);\n    const backgrounds = useSelector(selectBackgrounds);\n\n    const lengthBgImages = useSelector(selectBackgroundImages).length;\n    const objBgGeneral = useSelector(selectBgGeneral);\n    const bgGeneral = objBgGeneral ? objBgGeneral.img : 'https://lh3.googleusercontent.com/pw/ABLVV84w_pNrNk2EMyul9WEZQIGgWoLvREgHEC97b4Mf15Ks5Hoqt7v7nc07QVJrbIMlK2LWegS0dAQKL6yuKPxHGHqTDwlQOCxOMGTWtrhzl73nYIFv9CWK4h9QUB2dvOTMfXj-twNVuqOHLhczMnZRTAvECg=w1920-h1080-s-no-gm?authuser=0';\n    const objReservedBg = useSelector(selectReservedBG);\n    const reservedBG = objReservedBg ? objReservedBg.img : extraReservedImg;\n\n    const [activeChanging, setActiveChenging] = useState(false);\n\n    const firstDivItemContactRef= useRef(null);\n    const firstDivItemContact = firstDivItemContactRef.current;\n    const divItemContactRef = useRef(null);\n    const divItemContact = divItemContactRef.current;\n    const buttonChRef = useRef(null);\n    const buttonCh = buttonChRef.current;\n    const buttonDelRef = useRef(null);\n    const buttonDel = buttonDelRef.current;\n\n    const updateStateForDelete = () => {\n        const idContact = contact.id;\n        dispatch(deleteContact(idContact));\n        dispatch(deleteNumb());\n        const contactsList = document.querySelector('.listContactsForGap');\n        const scrollUl = contactsList.scrollLeft;\n        dispatch(setScrollLeftLists(scrollUl));\n        };\n\n    const [reservedImg, setReservedImg] = useState(extraReservedImg);\n\n    useEffect(() => {\n        if(lengthBgImages > 1){\n            setReservedImg(reservedBG);\n        } else if(lengthBgImages === 1){\n            setReservedImg(bgGeneral);\n        } else {\n            setReservedImg(extraReservedImg);\n        }\n    }, [lengthBgImages, bgGeneral, reservedBG, reservedImg]);\n\n    const lengthNumbsForImg = numbsForImg.length;\n    let numb = 1;\n\n    if (index >= lengthNumbsForImg){\n        numb = numbsForImg[index % lengthNumbsForImg];\n    } else {\n        numb = numbsForImg[index];\n    }\n\n    const img = backgrounds[numb] ? backgrounds[numb].img : null;\n\n    const closeChangingCWindow = () => {setActiveChenging(false)};\n\n    useEffect(() => {\n        const coef = 2;\n        const realScreenWidth = window.innerWidth;\n        const screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n        if(id !== activeId && firstDivItemContact && divItemContact && buttonCh && buttonDel){\n            setActiveChenging(false);\n            firstDivItemContact.style.borderRadius = screenWidth/(coef * 22) + 'px';\n            divItemContact.style.borderRadius = screenWidth/(coef * 22) + 'px';\n            divItemContact.style.textShadow = screenWidth/(coef * 250) + 'px ' + screenWidth/(coef * 250) + 'px ' + screenWidth/(coef * 100) + 'px black';\n            buttonCh.style.top = screenWidth/(coef * 22) + 'px';\n            buttonCh.style.left = screenWidth/(coef * 22) + 'px';\n            buttonDel.style.top = screenWidth/(coef * 22) + 'px';\n            buttonDel.style.right = screenWidth/(coef * 22) + 'px';\n            buttonDel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonDel.style.height = screenWidth/(coef * 13) + 'px';\n            buttonCh.style.width = screenWidth/(coef * 13) + 'px';\n            buttonCh.style.height = screenWidth/(coef * 13) + 'px';\n        } else if(id === activeId && firstDivItemContact && divItemContact && buttonCh && buttonDel){\n            firstDivItemContact.style.borderRadius = screenWidth/(coef * 22) * 1.4 + 'px';\n            divItemContact.style.borderRadius = screenWidth/(coef * 22) * 1.4 + 'px';\n            divItemContact.style.textShadow = screenWidth/(coef * 250) + 'px' + screenWidth/(coef * 250) + 'px' + screenWidth/(coef * 100) + 'px black';\n            buttonCh.style.top = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonCh.style.left = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonDel.style.top = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonDel.style.right = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonDel.style.width = screenWidth/(coef * 13) * 1.4 + 'px';\n            buttonDel.style.height = screenWidth/(coef * 13) * 1.4 + 'px';\n            buttonCh.style.width = screenWidth/(coef * 13) * 1.4 + 'px';\n            buttonCh.style.height = screenWidth/(coef * 13) * 1.4 + 'px';\n        }\n    }, [activeId, id, divItemContact, firstDivItemContact, buttonCh, buttonDel]);\n\n    const forClickUpdBut = () => {\n        setTimeout(() => {\n            setActiveChenging(true)\n        }, 400);\n    };\n\n    return(\n        <div ref={firstDivItemContactRef} className={[css.firstDivItemContact, 'firstDivItemContact'].join(' ')}\n        style={{\n            backgroundImage: `url(${img || reservedImg})`,\n            backgroundSize: 'cover', \n            backgroundPosition: 'center', \n            }}>\n                <div ref={divItemContactRef} className={[css.divItemContact, 'divItemContact'].join(' ')}>\n                    <h2 className={css.pItemContactsName}>{contact.name}</h2> \n                    <p className={css.pItemContactsNumber}>{contact.number}</p>\n                    <button ref={buttonDelRef} id={contact.id} className={css.buttonDelete} type='button' onClick={updateStateForDelete}>\n                        Delete\n                    </button>\n                    <button ref={buttonChRef} type='button' className={css.changeCBut} onClick = {forClickUpdBut}>\n                        Change contact\n                    </button>\n                    {activeChanging && \n                    <ChangingCWindow \n                    closeChangingCWindow = {closeChangingCWindow} \n                    name = {contact.name}\n                    number = {contact.number}\n                    id = {contact.id}\n                    />}\n                </div>\n        </div>\n    )\n}","import css from \"../Styles.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ItemContact } from \"components/ItemContact/ItemContact\";\nimport { selectContacts, selectFilter, selectScrollLeftLists } from \"../../redux/selectors\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { setScrollLeftLists } from \"../../redux/contactsSlice\";\n\nexport const UlForCL = () => {\n    const dispatch = useDispatch();\n    let contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const scrollLeftLists = useSelector(selectScrollLeftLists);\n\n    const [activeId, setActiveId] = useState(null);\n    const [listContHasEL, setListContHasEL] = useState(false);\n    const [realScreenWidth, setRealScreenWidth] = useState(null);\n    // const [topScrollPage, setTopScrollPage] = useState(0);\n    // setInterval(() => {console.log(realScreenWidth)}, 1000);\n\n    const listContacts = useRef(null);\n    const listContactsRef = listContacts.current;\n\n    useEffect(() => {\n        const forOrientation = () => {\n            setTimeout(() => {\n                setRealScreenWidth(window.innerWidth);\n            }, 100);\n        };\n        forOrientation();\n        window.addEventListener('orientationchange', forOrientation);\n    }, []);\n\n    useEffect(() => {\n        if(scrollLeftLists > 0){\n            if(listContacts.current){\n                setTimeout(() => {\n                    listContacts.current.scrollLeft = scrollLeftLists;\n                }, 100);\n                dispatch(setScrollLeftLists(0));\n            }\n        }\n    }, [scrollLeftLists, dispatch]);\n\n    if(filter.length > 0) {\n        contacts = contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    };\n\n    useEffect(() => {\n            const itemsContact = document.querySelectorAll('.itemContact');\n        const listContactsForGap = document.querySelector('.listContactsForGap');\n        const coef = 2;\n        const screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n        itemsContact.forEach(i => {\n            i.style.minWidth = screenWidth/coef + 'px';\n            i.style.height = screenWidth/(coef * 1.667) + 'px';\n            i.style.fontSize = screenWidth/(coef * 19) + 'px'; \n            i.style.borderRadius = screenWidth/(coef * 22) + 'px';\n        });\n        listContactsForGap.style.gap = screenWidth/(coef * 10) + 'px';\n\n        const forBackgroundAllPage = () => {\n            const realScreenHeight = window.innerHeight;\n                    const header = document.querySelector('header');\n                    const main = document.querySelector('main');\n                    const headerHeight = header.getBoundingClientRect().height;\n                    const mainHeight = main.getBoundingClientRect().height;\n                    const pageHeight = headerHeight + mainHeight;\n                    const body = document.querySelector('body');\n                        body.style.height = '100%';\n                        const root = document.querySelector('#root');\n                        root.style.height = '100%';\n                        const html = document.querySelector('html');\n                        html.style.height = '100%';\n                    if(realScreenHeight < pageHeight && contacts.length > 0){\n                        body.style.height = 'auto';\n                        root.style.height = 'auto';\n                        html.style.height = 'auto';\n                    }\n        };\n\n        forBackgroundAllPage();\n\n        \n\n        const autoScroll = (item, conditionForAutoSc = 0, scW) => {\n            itemsContact.forEach(i => {\n                i.style.minWidth = scW/coef + 'px';\n                i.style.height = scW/(coef * 1.667) + 'px';\n                i.style.fontSize = scW/(coef * 19) + 'px'; \n                i.style.borderRadius = scW/(coef * 22) + 'px';\n                i.classList.remove(css.itemContactActive);\n            });\n                    item.style.minWidth = scW/coef * 1.4 + 'px';\n                    item.style.height = scW/(coef * 1.667) * 1.4 + 'px';\n                    item.style.fontSize = scW/(coef * 19) * 1.4 + 'px'; \n                    item.style.borderRadius = scW/(coef * 22) * 1.4 + 'px';\n                    item.classList.add(css.itemContactActive);\n                    setActiveId(item.getAttribute('id'));\n                    const scrollLForList = listContacts.current.scrollLeft;\n                    listContacts.current.style.scrollBehavior = 'smooth';\n                    if(conditionForAutoSc !== 0){\n                        listContacts.current.scrollLeft = scrollLForList + conditionForAutoSc;\n                    };\n\n                    forBackgroundAllPage();\n\n                    listContacts.current.removeEventListener('scroll', () => forScroll(screenWidth));\n                    listContacts.current.removeEventListener('scroll', () => forScroll(screenWidth));\n                    setTimeout(() => {\n                        if(listContacts.current){\n                            listContacts.current.addEventListener('scroll', () => forScroll(screenWidth));\n                        }\n                    }, 500);\n        };\n\n        itemsContact.forEach(item => item.addEventListener('click', () => {\n            // setTopScrollPage(document.documentElement.scrollTop);\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            let firShiftVar = 260;\n            let secShiftVar = 60;\n            if(realScreenWidth >= 1000){\n                firShiftVar = 300;\n                secShiftVar = 100;\n            } else if(realScreenWidth < 1000 && realScreenWidth >= 900){\n                firShiftVar = 285;\n                secShiftVar = 95;\n            } else if(realScreenWidth < 900 && realScreenWidth >= 800){\n                firShiftVar = 253;\n                secShiftVar = 85;\n            } else if(realScreenWidth < 800 && realScreenWidth >= 750){\n                firShiftVar = 233;\n                secShiftVar = 77;\n            } else if(realScreenWidth < 750 && realScreenWidth >= 700){\n                firShiftVar = 218;\n                secShiftVar = 73;\n            } else if(realScreenWidth < 700 && realScreenWidth >= 650 ){\n                firShiftVar = 202;\n                secShiftVar = 67;\n            } else if(realScreenWidth < 650 && realScreenWidth >= 600){\n                firShiftVar = 187;\n                secShiftVar = 62;\n            } else if(realScreenWidth < 600 && realScreenWidth >= 550){\n                firShiftVar = 173;\n                secShiftVar = 58;\n            } else if(realScreenWidth < 550 && realScreenWidth >= 500){\n                firShiftVar = 158;\n                secShiftVar = 51;\n            } else if(realScreenWidth < 500 && realScreenWidth >= 450\n                ){\n                firShiftVar = 153;\n                secShiftVar = 58;\n            } else if(realScreenWidth < 450 && realScreenWidth >= 400){\n                firShiftVar = 137;\n                secShiftVar = 51;\n            } else if(realScreenWidth < 400 && realScreenWidth >= 350){\n                firShiftVar = 121;\n                secShiftVar = 46;\n            } else if(realScreenWidth < 350){\n                firShiftVar = 105;\n                secShiftVar = 36;\n            }\n            if(rectItem.x < rectListContacts.x + rectListContacts.width/2) {\n                const conditionForAutoSc = 0 - rectListContacts.width/2 + rectItem.x + firShiftVar;\n                autoScroll(item, conditionForAutoSc, screenWidth);\n            } else {\n                const conditionForAutoSc = 0  - rectListContacts.width/2 + rectItem.x + secShiftVar;\n                autoScroll(item, conditionForAutoSc, screenWidth);\n            }\n        }));\n\n        const readRectItem = (item, scW) => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            let startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 + 50 - 270;\n            let secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 270;\n            let firstMove = 200;\n            let secondMove = 100;\n            if(realScreenWidth <= 650 && realScreenWidth > 500){\n                startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 + 50 - 170;\n                secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 170;\n                firstMove = 150;\n            } else if(realScreenWidth <= 500 && realScreenWidth > 450){\n                startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 + 50 - 170;\n                secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 170;\n                firstMove = 130;\n            } else if(realScreenWidth <= 450 && realScreenWidth > 350){\n                startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 + 50 - 100;\n                secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 100;\n                firstMove = 100;\n            } else if(realScreenWidth <= 350){\n                startActive = rectListContacts.x;\n                secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 60;\n                firstMove = 80;\n            }\n            if(rectItem.x > startActive && \n                rectItem.x < rectListContacts.x + rectListContacts.width/2 &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 - rectItem.width/2 + firstMove;\n                autoScroll(item, conditionForAutoSc, scW);\n            } else if(rectItem.x > rectListContacts.x + rectListContacts.width/2 && \n                rectItem.x < secondStAct &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 + rectItem.width/2 - secondMove;\n                    autoScroll(item, conditionForAutoSc, scW);\n                }\n        };\n\n        const forScroll = (scW) => {\n            itemsContact.forEach(item => readRectItem(item, scW));\n        };\n\n        if(!listContHasEL && listContacts.current){\n            setListContHasEL(true);\n            listContacts.current.removeEventListener('scroll', () => forScroll(screenWidth));\n            listContacts.current.addEventListener('scroll', () => forScroll(screenWidth));\n        };\n        \n\n        return () => {\n            if(listContactsRef){\n                listContactsRef.removeEventListener('scroll', forScroll);\n            }\n        }\n    }, [contacts, listContHasEL, listContactsRef, realScreenWidth]);\n\n    return(\n        <ul ref={listContacts} className={[css.listContacts, 'listContactsForGap'].join(' ')}>\n            {contacts.length !== 0 &&\n                contacts.map((contact) => { \n                    return(\n                    <li key={contact.id} id={contact.id} className={[css.itemContact, 'itemContact'].join(' ')}>\n                    <ItemContact \n                        contact={contact}\n                        index={contacts.indexOf(contact)}\n                        id={contact.id}\n                        activeId={activeId}\n                    />\n                    </li>\n                )})\n            }\n        </ul>\n    )\n};","import styled, { keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContaiter = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\n`;\n\nconst RollerContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RollerDiv = styled.div`\n  animation: ${rotate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  transform-origin: 40px 40px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #000;\n    margin: -4px 0 0 -4px;\n  }\n`;\n\nconst RollerItem = styled(RollerDiv)`\n  &:nth-child(1) {\n    animation-delay: -0.036s;\n    &:after {\n      top: 63px;\n      left: 63px;\n    }\n  }\n  &:nth-child(2) {\n    animation-delay: -0.072s;\n    &:after {\n      top: 68px;\n      left: 56px;\n    }\n  }\n  &:nth-child(3) {\n    animation-delay: -0.108s;\n    &:after {\n      top: 71px;\n      left: 48px;\n    }\n  }\n  &:nth-child(4) {\n    animation-delay: -0.144s;\n    &:after {\n      top: 72px;\n      left: 40px;\n    }\n  }\n  &:nth-child(5) {\n    animation-delay: -0.18s;\n    &:after {\n      top: 71px;\n      left: 32px;\n    }\n  }\n  &:nth-child(6) {\n    animation-delay: -0.216s;\n    &:after {\n      top: 68px;\n      left: 24px;\n    }\n  }\n  &:nth-child(7) {\n    animation-delay: -0.252s;\n    &:after {\n      top: 63px;\n      left: 17px;\n    }\n  }\n  &:nth-child(8) {\n    animation-delay: -0.288s;\n    &:after {\n      top: 56px;\n      left: 12px;\n    }\n  }\n`;\n\nexport const Loader = () => {\n    return(\n    <LoaderContaiter>\n        <RollerContainer>\n    {[...Array(8)].map((_, index) => (\n    <RollerItem key={index} />\n    ))}\n    </RollerContainer>\n    </LoaderContaiter>\n    )};","import css from '../Styles.module.css';\nimport { UlForCL } from 'components/UlForCL/UlForCL';\nimport { selectIsLoading, selectError, selectNumbsForImg, selectBackgrounds } from '../../redux/selectors';\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/opertions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loader } from \"../Loader/Loader\";\nimport { createNumbs } from '../../redux/backgroundImgSlice';\n\nexport const ContactList = () => {\n    const realScreenWidth = window.innerWidth;\n    \n    const backgrounds = useSelector(selectBackgrounds);\n    const numbsForImg = useSelector(selectNumbsForImg);\n\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    const makeMassifNumbs = () => {\n        const massifNumbers = [];\n        const lengthImgMas = backgrounds.length - 1;\n        function createMassNumbs (){\n            const randomNumb = Math.floor(Math.random() * lengthImgMas);\n        const lengthMasNumb = massifNumbers.length;\n        if( massifNumbers[lengthMasNumb-1] !== randomNumb &&\n            massifNumbers[lengthMasNumb-2] !== randomNumb &&\n            massifNumbers[lengthMasNumb-3] !== randomNumb &&\n            massifNumbers[lengthMasNumb-4] !== randomNumb &&\n            massifNumbers[lengthMasNumb-5] !== randomNumb ){\n            massifNumbers.push(randomNumb);\n        } else {\n            createMassNumbs();\n        }\n        };\n        for (let i = 0; i <= lengthImgMas; i++){\n            createMassNumbs();\n        }\n        return massifNumbers\n    };\n\n    useEffect(() => {\n        if (numbsForImg.length < backgrounds.length){\n        dispatch(createNumbs(makeMassifNumbs()));\n        };\n    });\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    let varPadding = 20;\n    if(realScreenWidth > 1000){\n        varPadding = 50;\n    } else if(realScreenWidth > 500 && realScreenWidth <=1000){\n        varPadding = realScreenWidth/20;\n    } else{\n        varPadding = realScreenWidth/40;\n    }\n\n    return(\n        <div className={[css.allDivContactList, 'allDivContactList'].join(' ')}>\n        {error ? (\n        <h2>Oopsss...Something went wrong...</h2>\n        ) : (\n        <div id='divForContactList' className={css.divForContactList}\n        style={{\n            paddingLeft: varPadding,\n            paddingRight: varPadding,\n        }}\n        >\n                {isLoading && !error ? <Loader /> : <UlForCL />}\n            </div>\n            )}\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"divContFiltPageUsers\":\"PageUsers_divContFiltPageUsers__JZL5M\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectToken } from '../../redux/workWithBackend/selectors';\nimport css from './PageUsers.module.css';\n\nconst PageUsers = () => {\n    const token = useSelector(selectToken);\n    if (token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    }\n    return(\n        <>\n        <div className={css.divContFiltPageUsers}>\n        <Filter />\n        <ContactForm />\n        </div>\n        <ContactList />\n        </>\n    )\n};\n\nexport default PageUsers;"],"names":["ContactForm","dispatch","useDispatch","namesContacts","useSelector","selectContacts","map","contact","name","closeModalForEsc","e","key","removeClasses","modalDivContactForm","document","querySelector","firstDivContactForm","inputsAdd","querySelectorAll","workRC","removeEventListener","forEach","input","blur","classList","remove","css","target","contains","useEffect","divForMiniContactForm","labelFilter","addEventListener","add","style","marginRight","_jsx","className","join","children","_jsxs","type","onClick","inputNameAdd","setTimeout","focus","onSubmit","evt","preventDefault","newName","currentTarget","elements","value","some","toLowerCase","alert","concat","newNumb","number","dataForAdd","addContact","reset","required","Filter","filterWithState","selectFilter","_useState","useState","_useState2","_slicedToArray","placeholderValue","setPlaceholderValue","realScreenWidth","window","innerWidth","placeholder","onChange","filterValue","setFilter","ChangingCWindow","_ref","closeChangingCWindow","id","coef","screenWidth","nameInputChangingCWindowS","inputChangingCWindowS","buttonsChangingCWindow","buttonChangingCWindowS","labelChangingCWindowS","formChangingCWindow","i","fontSize","width","height","borderRadius","paddingLeft","paddingRight","borderWidth","gap","idContact","dataForPatch","patchContact","scrollUl","scrollLeft","setScrollLeftLists","defaultValue","ItemContact","index","activeId","extraReservedImg","numbsForImg","selectNumbsForImg","backgrounds","selectBackgrounds","lengthBgImages","selectBackgroundImages","length","objBgGeneral","selectBgGeneral","bgGeneral","img","objReservedBg","selectReservedBG","reservedBG","activeChanging","setActiveChenging","firstDivItemContactRef","useRef","firstDivItemContact","current","divItemContactRef","divItemContact","buttonChRef","buttonCh","buttonDelRef","buttonDel","_useState3","_useState4","reservedImg","setReservedImg","lengthNumbsForImg","numb","textShadow","top","left","right","ref","backgroundImage","backgroundSize","backgroundPosition","deleteContact","deleteNumb","UlForCL","contacts","filter","scrollLeftLists","selectScrollLeftLists","setActiveId","listContHasEL","setListContHasEL","_useState5","_useState6","setRealScreenWidth","listContacts","listContactsRef","forOrientation","includes","itemsContact","listContactsForGap","minWidth","forBackgroundAllPage","realScreenHeight","innerHeight","header","main","pageHeight","getBoundingClientRect","body","root","html","autoScroll","item","conditionForAutoSc","arguments","undefined","scW","getAttribute","scrollLForList","scrollBehavior","forScroll","rectItem","rectListContacts","firShiftVar","secShiftVar","x","startActive","secondStAct","firstMove","readRectItem","indexOf","rotate","keyframes","_templateObject","_taggedTemplateLiteral","LoaderContaiter","styled","_templateObject2","RollerContainer","_templateObject3","RollerDiv","_templateObject4","RollerItem","_templateObject5","Loader","_toConsumableArray","Array","_","ContactList","isLoading","selectIsLoading","error","selectError","createNumbs","massifNumbers","lengthImgMas","createMassNumbs","randomNumb","Math","floor","random","lengthMasNumb","push","makeMassifNumbs","fetchContacts","varPadding","token","selectToken","axios","_Fragment"],"sourceRoot":""}