{"version":3,"file":"static/js/105.59097631.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Styles.module.css?0d1d","webpack://goit-react-hw-08-phonebook/./src/components/ChangingCWindow/ChangingCWindow.module.css?6ea6","components/ChangingCWindow/ChangingCWindow.jsx","components/ItemContact/ItemContact.jsx","components/UlForCL/UlForCL.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/PageUsers/PageUsers.module.css?51bf","components/PageUsers/PageUsers.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDivContactFormActive\":\"ContactForm_modalDivContactFormActive__iqPeh\",\"divForMiniContactForm\":\"ContactForm_divForMiniContactForm__GE+KH\",\"firstDivContactFormActive\":\"ContactForm_firstDivContactFormActive__ULKpq\",\"buttonAddMiniContactForm\":\"ContactForm_buttonAddMiniContactForm__HTUv0\",\"firstDivContactForm\":\"ContactForm_firstDivContactForm__IX7sb\",\"divContactForm\":\"ContactForm_divContactForm__rz08u\",\"formContactForm\":\"ContactForm_formContactForm__EZbe8\",\"labelContactForm\":\"ContactForm_labelContactForm__ocuDM\",\"inputContactForm\":\"ContactForm_inputContactForm__h2PrQ\",\"buttonContactForm\":\"ContactForm_buttonContactForm__lTw1p\",\"nameInputContactForm\":\"ContactForm_nameInputContactForm__lolmN\"};","import { addContact } from '../../redux/opertions';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\n// import { click } from '@testing-library/user-event/dist/click';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const namesContacts = useSelector(selectContacts).map(contact => contact.name);\n\n    const updateStateForAdd = (evt) => {\n        evt.preventDefault();\n        const newName = evt.currentTarget.elements.name.value;\n        \n        if(!namesContacts.some(name => name.toLowerCase() === newName.toLowerCase())){\n            const newNumb = evt.currentTarget.elements.number.value;\n            const dataForAdd = {\n                name: newName,\n                number: newNumb\n            }\n            dispatch(addContact(dataForAdd));\n            evt.currentTarget.reset();\n            removeClasses();\n        } else{\n            alert(`${newName} is already in contacts.`)\n        }\n        };\n\n        function forAddButton(){\n            const modalDivContactForm = document.querySelector('.modalDivContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n            const inputNameAdd = document.querySelector('.inputNameAdd');\n\n            modalDivContactForm.classList.add(css.modalDivContactFormActive);\n            firstDivContactForm.classList.add(css.firstDivContactFormActive);\n            \n            setTimeout(() => {\n                inputNameAdd.focus();\n            }, 100);\n\n            modalDivContactForm.addEventListener('click', removeClasses);\n            document.addEventListener('keydown', closeModalForEsc);\n        };\n\n        const closeModalForEsc = (e) => {\n            if(e.key === 'Escape'){\n                removeClasses();\n            }\n        };\n\n        const removeClasses = (e) => {\n            const modalDivContactForm = document.querySelector('.modalDivContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n            const inputsAdd = document.querySelectorAll('.inputsAdd');\n\n            function workRC(){\n                modalDivContactForm.removeEventListener('click', removeClasses);\n                document.removeEventListener('keydown', closeModalForEsc);\n                inputsAdd.forEach(input => input.blur());\n                modalDivContactForm.classList.remove(css.modalDivContactFormActive);\n                firstDivContactForm.classList.remove(css.firstDivContactFormActive);\n            };\n\n            if(e){\n            if (e.target.classList.contains(css.modalDivContactFormActive)){\n            workRC();\n            };\n        } else{\n            workRC();\n        }\n        };\n\n    return (\n        <div className={[css.modalDivContactForm, 'modalDivContactForm'].join(' ')}>\n            <div className={[css.firstDivContactForm, 'firstDivContactForm'].join(' ')}>\n                <div className={css.divForMiniContactForm}>\n                    <button className={css.buttonAddMiniContactForm} type='button' onClick={forAddButton}>\n                        Add\n                    </button>\n                    </div>\n                <div className={css.divContactForm}>\n\n                <form className={css.formContactForm} onSubmit={updateStateForAdd}>\n            <label className={css.labelContactForm}>\n                <span className={css.nameInputContactForm}>Name</span>\n            <input className={[css.inputContactForm,'inputNameAdd', 'inputsAdd'].join(' ')} type=\"text\" name=\"name\" required/>\n            </label>\n            <label className={css.labelContactForm}>\n                <span className={css.nameInputContactForm}>Number</span>\n                <input className={[css.inputContactForm, 'inputsAdd'].join(' ')} type=\"tel\" name=\"number\" required />\n            </label>\n            <button className={css.buttonContactForm} type=\"submit\">Add contact</button>\n        </form>\n                </div>\n        </div>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"labelFilter\":\"Filter_labelFilter__7SBy1\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n        return(\n            <label className={css.labelFilter}>\n                <input \n                value={filterWithState}\n                className={css.inputFilter} \n                type=\"text\" \n                name=\"filter\" \n                placeholder='Please start typing the desired name'\n                onChange={updateStateForFilter}\n                />\n            </label>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"divForContactList\":\"Styles_divForContactList__Ofiyn\",\"listContacts\":\"Styles_listContacts__SuTGr\",\"itemContact\":\"Styles_itemContact__64PYw\",\"itemContactActive\":\"Styles_itemContactActive__g5AvF\",\"firstDivItemContact\":\"Styles_firstDivItemContact__qg5NT\",\"divItemContact\":\"Styles_divItemContact__azqCU\",\"pItemContactsName\":\"Styles_pItemContactsName__ZaW5M\",\"pItemContactsNumber\":\"Styles_pItemContactsNumber__mAeQH\",\"buttonDelete\":\"Styles_buttonDelete__Et1oD\",\"changeCBut\":\"Styles_changeCBut__smBip\"};","// extracted by mini-css-extract-plugin\nexport default {\"formChangingCWindow\":\"ChangingCWindow_formChangingCWindow__Ly6Lz\",\"labelChangingCWindow\":\"ChangingCWindow_labelChangingCWindow__8hyzk\",\"inputChangingCWindow\":\"ChangingCWindow_inputChangingCWindow__U+AvV\",\"buttonsChangingCWindow\":\"ChangingCWindow_buttonsChangingCWindow__CIoc1\",\"buttonChangingCWindow\":\"ChangingCWindow_buttonChangingCWindow__QQGd6\",\"nameInputChangingCWindow\":\"ChangingCWindow_nameInputChangingCWindow__qtQsA\"};","import css from './ChangingCWindow.module.css';\nimport { useDispatch } from 'react-redux';\nimport { patchContact } from '../../redux/opertions';\nimport { setScrollLeftLists } from '../../redux/contactsSlice';\n\nexport const ChangingCWindow = ({closeChangingCWindow, name, number, id, actualScroll}) => {\n    const dispatch = useDispatch();\n\n    const updateStateForPatch = (evt) => {\n        evt.preventDefault();\n        const newName = evt.currentTarget.elements.name.value;\n        const idContact = id;\n        const newNumb = evt.currentTarget.elements.number.value;\n        const dataForPatch = {\n            id: idContact,\n            name: newName,\n            number: newNumb\n        }\n        dispatch(patchContact(dataForPatch));\n        evt.currentTarget.reset();\n        dispatch(setScrollLeftLists(actualScroll));\n        };\n    return(\n            <form className={css.formChangingCWindow} onSubmit={updateStateForPatch}>\n                <label className={css.labelChangingCWindow}>\n                    <span className={css.nameInputChangingCWindow}>Name</span>\n                <input className={css.inputChangingCWindow} \n                defaultValue={name}\n                type=\"text\" \n                name=\"name\" \n                required \n                />\n                </label>\n                <label className={css.labelChangingCWindow}>\n                        <span className={css.nameInputChangingCWindow}>Number</span>\n                    <input className={css.inputChangingCWindow}\n                    defaultValue={number}\n                    type=\"tel\"\n                    name=\"number\" \n                    required \n                    />\n                </label>\n                <div className={css.buttonsChangingCWindow}>\n                <button className={css.buttonChangingCWindow} type=\"button\" onClick={closeChangingCWindow}>Changen't contact</button>\n                <button className={css.buttonChangingCWindow} type=\"submit\">Change contact</button>\n                </div>\n            </form>\n    )\n};","import css from '../Styles.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/opertions';\nimport { selectNumbsForImg, selectBackgrounds, selectBackgroundImages, selectBgGeneral, selectReservedBG } from '../../redux/selectors';\nimport { deleteNumb } from '../../redux/backgroundImgSlice';\nimport { useEffect, useState, useRef } from 'react';\nimport { ChangingCWindow } from '../ChangingCWindow/ChangingCWindow';\nimport { setScrollLeftLists } from '../../redux/contactsSlice';\n\nexport const ItemContact = ({contact, index, id, activeId, actualScroll}) => {\n    const extraReservedImg = 'https://lh3.googleusercontent.com/pw/ABLVV857Vcs93eVOrm0Pm8WnNvcJSKLX3arSslyCmWpj-7cuG6ywCsjBpMiPRikFXgiC2xK8v2En5xPEynswskO4l7gjBpdWNWzhFRyOj8BJ3orxfjDDlbSF1EOr7mROLVTTOvdNiJhvM432128-GmRqOrEKcQ=w1500-h1000-s-no-gm?authuser=0';\n\n    const dispatch = useDispatch();\n    const numbsForImg = useSelector(selectNumbsForImg);\n    const backgrounds = useSelector(selectBackgrounds);\n\n    const lengthBgImages = useSelector(selectBackgroundImages).length;\n    const objBgGeneral = useSelector(selectBgGeneral);\n    const bgGeneral = objBgGeneral ? objBgGeneral.img : 'https://lh3.googleusercontent.com/pw/ABLVV84w_pNrNk2EMyul9WEZQIGgWoLvREgHEC97b4Mf15Ks5Hoqt7v7nc07QVJrbIMlK2LWegS0dAQKL6yuKPxHGHqTDwlQOCxOMGTWtrhzl73nYIFv9CWK4h9QUB2dvOTMfXj-twNVuqOHLhczMnZRTAvECg=w1920-h1080-s-no-gm?authuser=0';\n    const objReservedBg = useSelector(selectReservedBG);\n    const reservedBG = objReservedBg ? objReservedBg.img : extraReservedImg;\n\n    const [activeChanging, setActiveChenging] = useState(false);\n\n    const firstDivItemContactRef= useRef(null);\n    const firstDivItemContact = firstDivItemContactRef.current;\n    const divItemContactRef = useRef(null);\n    const divItemContact = divItemContactRef.current;\n    const buttonChRef = useRef(null);\n    const buttonCh = buttonChRef.current;\n    const buttonDelRef = useRef(null);\n    const buttonDel = buttonDelRef.current;\n\n    const updateStateForDelete = () => {\n        const idContact = contact.id;\n        dispatch(deleteContact(idContact));\n        dispatch(deleteNumb());\n        dispatch(setScrollLeftLists(actualScroll));\n        };\n\n    const [reservedImg, setReservedImg] = useState(extraReservedImg);\n\n    useEffect(() => {\n        if(lengthBgImages > 1){\n            setReservedImg(reservedBG);\n        } else if(lengthBgImages === 1){\n            setReservedImg(bgGeneral);\n        } else {\n            setReservedImg(extraReservedImg);\n        }\n    }, [lengthBgImages, bgGeneral, reservedBG, reservedImg]);\n\n    const lengthNumbsForImg = numbsForImg.length;\n    let numb = 1;\n\n    if (index >= lengthNumbsForImg){\n        numb = numbsForImg[index % lengthNumbsForImg];\n    } else {\n        numb = numbsForImg[index];\n    }\n\n    const img = backgrounds[numb] ? backgrounds[numb].img : null;\n\n    const closeChangingCWindow = () => {setActiveChenging(false)};\n\n    useEffect(() => {\n        const coef = 2;\n        const realScreenWidth = window.innerWidth;\n        const screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n        if(id !== activeId && firstDivItemContact && divItemContact && buttonCh && buttonDel){\n            setActiveChenging(false);\n            firstDivItemContact.style.borderRadius = screenWidth/(coef * 22) + 'px';\n            divItemContact.style.borderRadius = screenWidth/(coef * 22) + 'px';\n            buttonCh.style.top = screenWidth/(coef * 22) + 'px';\n            buttonCh.style.left = screenWidth/(coef * 22) + 'px';\n            buttonDel.style.top = screenWidth/(coef * 22) + 'px';\n            buttonDel.style.right = screenWidth/(coef * 22) + 'px';\n            buttonDel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonDel.style.height = screenWidth/(coef * 13) + 'px';\n            buttonCh.style.width = screenWidth/(coef * 13) + 'px';\n            buttonCh.style.height = screenWidth/(coef * 13) + 'px';\n        } else if(id === activeId && firstDivItemContact && divItemContact && buttonCh && buttonDel){\n            firstDivItemContact.style.borderRadius = screenWidth/(coef * 22) * 1.4 + 'px';\n            divItemContact.style.borderRadius = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonCh.style.top = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonCh.style.left = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonDel.style.top = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonDel.style.right = screenWidth/(coef * 22) * 1.4 + 'px';\n            buttonDel.style.width = screenWidth/(coef * 13) * 1.4 + 'px';\n            buttonDel.style.height = screenWidth/(coef * 13) * 1.4 + 'px';\n            buttonCh.style.width = screenWidth/(coef * 13) * 1.4 + 'px';\n            buttonCh.style.height = screenWidth/(coef * 13) * 1.4 + 'px';\n        }\n    }, [activeId, id, divItemContact, firstDivItemContact, buttonCh, buttonDel]);\n\n    return(\n        <div ref={firstDivItemContactRef} className={[css.firstDivItemContact, 'firstDivItemContact'].join(' ')}\n        style={{\n            backgroundImage: `url(${img || reservedImg})`,\n            backgroundSize: 'cover', \n            backgroundPosition: 'center', \n            }}>\n                <div ref={divItemContactRef} className={[css.divItemContact, 'divItemContact'].join(' ')}>\n                    <h2 className={css.pItemContactsName}>{contact.name}</h2> \n                    <p className={css.pItemContactsNumber}>{contact.number}</p>\n                    <button ref={buttonDelRef} id={contact.id} className={css.buttonDelete} type='button' onClick={updateStateForDelete}>\n                        Delete\n                    </button>\n                    <button ref={buttonChRef} type='button' className={css.changeCBut} onClick = {() => setActiveChenging(true)}>\n                        Change contact\n                    </button>\n                    {activeChanging && \n                    <ChangingCWindow \n                    closeChangingCWindow = {closeChangingCWindow} \n                    name = {contact.name}\n                    number = {contact.number}\n                    id = {contact.id}\n                    actualScroll = {actualScroll}\n                    />}\n                </div>\n        </div>\n    )\n}","import css from \"../Styles.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ItemContact } from \"components/ItemContact/ItemContact\";\nimport { selectContacts, selectFilter, selectScrollLeftLists } from \"../../redux/selectors\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { setScrollLeftLists } from \"../../redux/contactsSlice\";\n\nexport const UlForCL = () => {\n    const dispatch = useDispatch();\n    let contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const scrollLeftLists = useSelector(selectScrollLeftLists);\n\n    const [activeId, setActiveId] = useState(null);\n    const [actualScroll, setActualScroll] = useState(0);\n    const [listContHasEL, setListContHasEL] = useState(false);\n\n    const listContacts = useRef(null);\n    const listContactsRef = listContacts.current;\n\n    useEffect(() => {\n        if(scrollLeftLists > 0){\n            if(listContacts.current){\n                listContacts.current.scrollLeft = scrollLeftLists + 50;\n                dispatch(setScrollLeftLists(0));\n            }\n        }\n    });\n\n    if(filter.length > 0) {\n        contacts = contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    };\n\n    useEffect(() => {\n        const itemsContact = document.querySelectorAll('.itemContact');\n        const listContactsForGap = document.querySelector('.listContactsForGap');\n        const coef = 2;\n        const realScreenWidth = window.innerWidth;\n        const screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n        itemsContact.forEach(i => {\n            i.style.minWidth = screenWidth/coef + 'px';\n            i.style.height = screenWidth/(coef * 1.667) + 'px';\n            i.style.fontSize = screenWidth/(coef * 19) + 'px'; \n            i.style.borderRadius = screenWidth/(coef * 22) + 'px';\n        });\n        listContactsForGap.style.gap = screenWidth/(coef * 10) + 'px';\n\n        const forScroll = () => {\n            setActualScroll(listContacts.current.scrollLeft);\n            itemsContact.forEach(item => readRectItem(item));\n        };\n\n        if(!listContHasEL && listContacts.current){\n            setListContHasEL(true);\n            listContacts.current.removeEventListener('scroll', forScroll);\n            listContacts.current.addEventListener('scroll', forScroll);\n        };\n\n        const autoScroll = (item, conditionForAutoSc = 0) => {\n            itemsContact.forEach(i => {\n                i.style.minWidth = screenWidth/coef + 'px';\n                i.style.height = screenWidth/(coef * 1.667) + 'px';\n                i.style.fontSize = screenWidth/(coef * 19) + 'px'; \n                i.style.borderRadius = screenWidth/(coef * 22) + 'px';\n                i.classList.remove(css.itemContactActive);\n            });\n                    item.style.minWidth = screenWidth/coef * 1.4 + 'px';\n                    item.style.height = screenWidth/(coef * 1.667) * 1.4 + 'px';\n                    item.style.fontSize = screenWidth/(coef * 19) * 1.4 + 'px'; \n                    item.style.borderRadius = screenWidth/(coef * 22) * 1.4 + 'px';\n                    item.classList.add(css.itemContactActive);\n                    setActiveId(item.getAttribute('id'));\n                    const scrollLForList = listContacts.current.scrollLeft;\n                    listContacts.current.style.scrollBehavior = 'smooth';\n                    if(conditionForAutoSc !== 0){\n                        listContacts.current.scrollLeft = scrollLForList + conditionForAutoSc;\n                    };\n\n                    listContacts.current.removeEventListener('scroll', forScroll);\n                    listContacts.current.removeEventListener('scroll', forScroll);\n                    \n                    setTimeout(() => {\n                        if(listContacts.current){\n                            listContacts.current.addEventListener('scroll', forScroll);\n                        }\n                    }, 500);\n        };\n\n        itemsContact.forEach(item => item.addEventListener('click', () => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            let firShiftVar = 260;\n            let secShiftVar = 60;\n            if(realScreenWidth >= 1000){\n                firShiftVar = 300;\n                secShiftVar = 100;\n            } else if(realScreenWidth < 1000 && realScreenWidth >= 900){\n                firShiftVar = 285;\n                secShiftVar = 95;\n            } else if(realScreenWidth < 900 && realScreenWidth >= 800){\n                firShiftVar = 253;\n                secShiftVar = 85;\n            } else if(realScreenWidth < 800 && realScreenWidth >= 750){\n                firShiftVar = 233;\n                secShiftVar = 77;\n            } else if(realScreenWidth < 750 && realScreenWidth >= 700){\n                firShiftVar = 218;\n                secShiftVar = 73;\n            } else if(realScreenWidth < 700 && realScreenWidth >= 650 ){\n                firShiftVar = 202;\n                secShiftVar = 67;\n            } else if(realScreenWidth < 650 && realScreenWidth >= 600){\n                firShiftVar = 187;\n                secShiftVar = 62;\n            } else if(realScreenWidth < 600 && realScreenWidth >= 550){\n                firShiftVar = 173;\n                secShiftVar = 58;\n            } else if(realScreenWidth < 550 && realScreenWidth >= 500){\n                firShiftVar = 158;\n                secShiftVar = 51;\n            } else if(realScreenWidth < 500 && realScreenWidth >= 450\n                ){\n                firShiftVar = 153;\n                secShiftVar = 58;\n            } else if(realScreenWidth < 450 && realScreenWidth >= 400){\n                firShiftVar = 137;\n                secShiftVar = 51;\n            } else if(realScreenWidth < 400 && realScreenWidth >= 350){\n                firShiftVar = 121;\n                secShiftVar = 46;\n            } else if(realScreenWidth < 350){\n                firShiftVar = 105;\n                secShiftVar = 36;\n            }\n            if(rectItem.x < rectListContacts.x + rectListContacts.width/2) {\n                const conditionForAutoSc = 0 - rectListContacts.width/2 + rectItem.x + firShiftVar;\n                autoScroll(item, conditionForAutoSc);\n            } else {\n                const conditionForAutoSc = 0  - rectListContacts.width/2 + rectItem.x + secShiftVar;\n                autoScroll(item, conditionForAutoSc);\n            }\n        }));\n\n        const readRectItem = (item) => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            let startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 + 50 - 270;\n            let secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 270;\n            let firstMove = 200;\n            let secondMove = 100;\n            if(realScreenWidth <= 650 && realScreenWidth > 500){\n                startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 + 50 - 170;\n                secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 170;\n                firstMove = 150;\n            } else if(realScreenWidth <= 500 && realScreenWidth > 450){\n                startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 + 50 - 170;\n                secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 170;\n                firstMove = 130;\n            } else if(realScreenWidth <= 450 && realScreenWidth > 350){\n                startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 + 50 - 100;\n                secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 100;\n                firstMove = 100;\n            } else if(realScreenWidth <= 350){\n                startActive = rectListContacts.x;\n                secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 50 - 60;\n                firstMove = 80;\n            }\n            if(rectItem.x > startActive && \n                rectItem.x < rectListContacts.x + rectListContacts.width/2 &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 - rectItem.width/2 + firstMove;\n                autoScroll(item, conditionForAutoSc);\n            } else if(rectItem.x > rectListContacts.x + rectListContacts.width/2 && \n                rectItem.x < secondStAct &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 + rectItem.width/2 - secondMove;\n                    autoScroll(item, conditionForAutoSc);\n                }\n        };\n\n        return () => {\n            if(listContactsRef){\n                listContactsRef.removeEventListener('scroll', forScroll);\n            }\n        }\n    }, [contacts, listContHasEL, listContactsRef]);\n\n    return(\n        <ul ref={listContacts} className={[css.listContacts, 'listContactsForGap'].join(' ')}>\n            {contacts.length !== 0 &&\n                contacts.map((contact) => { \n                    return(\n                    <li key={contact.id} id={contact.id} className={[css.itemContact, 'itemContact'].join(' ')}>\n                    <ItemContact \n                        contact={contact}\n                        index={contacts.indexOf(contact)}\n                        id={contact.id}\n                        activeId={activeId}\n                        actualScroll={actualScroll}\n                    />\n                    </li>\n                )})\n            }\n        </ul>\n    )\n};","import styled, { keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContaiter = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\n`;\n\nconst RollerContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RollerDiv = styled.div`\n  animation: ${rotate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  transform-origin: 40px 40px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #000;\n    margin: -4px 0 0 -4px;\n  }\n`;\n\nconst RollerItem = styled(RollerDiv)`\n  &:nth-child(1) {\n    animation-delay: -0.036s;\n    &:after {\n      top: 63px;\n      left: 63px;\n    }\n  }\n  &:nth-child(2) {\n    animation-delay: -0.072s;\n    &:after {\n      top: 68px;\n      left: 56px;\n    }\n  }\n  &:nth-child(3) {\n    animation-delay: -0.108s;\n    &:after {\n      top: 71px;\n      left: 48px;\n    }\n  }\n  &:nth-child(4) {\n    animation-delay: -0.144s;\n    &:after {\n      top: 72px;\n      left: 40px;\n    }\n  }\n  &:nth-child(5) {\n    animation-delay: -0.18s;\n    &:after {\n      top: 71px;\n      left: 32px;\n    }\n  }\n  &:nth-child(6) {\n    animation-delay: -0.216s;\n    &:after {\n      top: 68px;\n      left: 24px;\n    }\n  }\n  &:nth-child(7) {\n    animation-delay: -0.252s;\n    &:after {\n      top: 63px;\n      left: 17px;\n    }\n  }\n  &:nth-child(8) {\n    animation-delay: -0.288s;\n    &:after {\n      top: 56px;\n      left: 12px;\n    }\n  }\n`;\n\nexport const Loader = () => {\n    return(\n    <LoaderContaiter>\n        <RollerContainer>\n    {[...Array(8)].map((_, index) => (\n    <RollerItem key={index} />\n    ))}\n    </RollerContainer>\n    </LoaderContaiter>\n    )};","import css from '../Styles.module.css';\nimport { UlForCL } from 'components/UlForCL/UlForCL';\nimport { selectIsLoading, selectError, selectNumbsForImg, selectBackgrounds } from '../../redux/selectors';\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/opertions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loader } from \"../Loader/Loader\";\nimport { createNumbs } from '../../redux/backgroundImgSlice';\n\nexport const ContactList = () => {\n    const realScreenWidth = window.innerWidth;\n    \n    const backgrounds = useSelector(selectBackgrounds);\n    const numbsForImg = useSelector(selectNumbsForImg);\n\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    const makeMassifNumbs = () => {\n        const massifNumbers = [];\n        const lengthImgMas = backgrounds.length - 1;\n        function createMassNumbs (){\n            const randomNumb = Math.floor(Math.random() * lengthImgMas);\n        const lengthMasNumb = massifNumbers.length;\n        if( massifNumbers[lengthMasNumb-1] !== randomNumb &&\n            massifNumbers[lengthMasNumb-2] !== randomNumb &&\n            massifNumbers[lengthMasNumb-3] !== randomNumb &&\n            massifNumbers[lengthMasNumb-4] !== randomNumb &&\n            massifNumbers[lengthMasNumb-5] !== randomNumb ){\n            massifNumbers.push(randomNumb);\n        } else {\n            createMassNumbs();\n        }\n        };\n        for (let i = 0; i <= lengthImgMas; i++){\n            createMassNumbs();\n        }\n        return massifNumbers\n    };\n\n    useEffect(() => {\n        if (numbsForImg.length < backgrounds.length){\n        dispatch(createNumbs(makeMassifNumbs()));\n        };\n    });\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    let varPadding = 20;\n    if(realScreenWidth > 1000){\n        varPadding = 50;\n    } else if(realScreenWidth > 500 && realScreenWidth <=1000){\n        varPadding = realScreenWidth/20;\n    } else{\n        varPadding = realScreenWidth/40;\n    }\n\n    return(\n        <>\n        {error ? (\n        <h2>Oopsss...Something went wrong...</h2>\n        ) : (\n        <div id='divForContactList' className={css.divForContactList}\n        style={{\n            paddingLeft: varPadding,\n            paddingRight: varPadding,\n        }}\n        >\n                {isLoading && !error ? <Loader /> : <UlForCL />}\n            </div>\n            )}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"divContFiltPageUsers\":\"PageUsers_divContFiltPageUsers__JZL5M\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectToken } from '../../redux/workWithBackend/selectors';\nimport css from './PageUsers.module.css';\n\nconst PageUsers = () => {\n    const token = useSelector(selectToken);\n    if (token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    }\n    return(\n        <>\n        <div className={css.divContFiltPageUsers}>\n        <Filter />\n        <ContactForm />\n        </div>\n        <ContactList />\n        </>\n    )\n};\n\nexport default PageUsers;"],"names":["ContactForm","dispatch","useDispatch","namesContacts","useSelector","selectContacts","map","contact","name","closeModalForEsc","e","key","removeClasses","modalDivContactForm","document","querySelector","firstDivContactForm","inputsAdd","querySelectorAll","workRC","removeEventListener","forEach","input","blur","classList","remove","css","target","contains","_jsx","className","join","children","_jsxs","type","onClick","inputNameAdd","add","setTimeout","focus","addEventListener","onSubmit","evt","preventDefault","newName","currentTarget","elements","value","some","toLowerCase","alert","concat","newNumb","number","dataForAdd","addContact","reset","required","Filter","filterWithState","selectFilter","placeholder","onChange","filterValue","setFilter","ChangingCWindow","_ref","closeChangingCWindow","id","actualScroll","dataForPatch","patchContact","setScrollLeftLists","defaultValue","ItemContact","index","activeId","extraReservedImg","numbsForImg","selectNumbsForImg","backgrounds","selectBackgrounds","lengthBgImages","selectBackgroundImages","length","objBgGeneral","selectBgGeneral","bgGeneral","img","objReservedBg","selectReservedBG","reservedBG","_useState","useState","_useState2","_slicedToArray","activeChanging","setActiveChenging","firstDivItemContactRef","useRef","firstDivItemContact","current","divItemContactRef","divItemContact","buttonChRef","buttonCh","buttonDelRef","buttonDel","_useState3","_useState4","reservedImg","setReservedImg","useEffect","lengthNumbsForImg","numb","realScreenWidth","window","innerWidth","screenWidth","style","borderRadius","top","left","right","width","height","ref","backgroundImage","backgroundSize","backgroundPosition","idContact","deleteContact","deleteNumb","UlForCL","contacts","filter","scrollLeftLists","selectScrollLeftLists","setActiveId","setActualScroll","_useState5","_useState6","listContHasEL","setListContHasEL","listContacts","listContactsRef","scrollLeft","includes","itemsContact","listContactsForGap","i","minWidth","fontSize","gap","forScroll","item","readRectItem","autoScroll","conditionForAutoSc","arguments","undefined","getAttribute","scrollLForList","scrollBehavior","rectItem","getBoundingClientRect","rectListContacts","firShiftVar","secShiftVar","x","startActive","secondStAct","firstMove","indexOf","rotate","keyframes","_templateObject","_taggedTemplateLiteral","LoaderContaiter","styled","_templateObject2","RollerContainer","_templateObject3","RollerDiv","_templateObject4","RollerItem","_templateObject5","Loader","_toConsumableArray","Array","_","ContactList","isLoading","selectIsLoading","error","selectError","createNumbs","massifNumbers","lengthImgMas","createMassNumbs","randomNumb","Math","floor","random","lengthMasNumb","push","makeMassifNumbs","fetchContacts","varPadding","_Fragment","paddingLeft","paddingRight","token","selectToken","axios"],"sourceRoot":""}