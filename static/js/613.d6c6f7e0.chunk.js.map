{"version":3,"file":"static/js/613.d6c6f7e0.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selectors.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Styles.module.css?0d1d","components/Filter/Filter.jsx","components/ItemContact/ItemContact.jsx","components/UlForCL/UlForCL.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/PageUsers/PageUsers.module.css?51bf","components/PageUsers/PageUsers.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDivContactFormActive\":\"ContactForm_modalDivContactFormActive__iqPeh\",\"divForMiniContactForm\":\"ContactForm_divForMiniContactForm__GE+KH\",\"firstDivContactFormActive\":\"ContactForm_firstDivContactFormActive__ULKpq\",\"buttonAddMiniContactForm\":\"ContactForm_buttonAddMiniContactForm__HTUv0\",\"firstDivContactForm\":\"ContactForm_firstDivContactForm__IX7sb\",\"divContactForm\":\"ContactForm_divContactForm__rz08u\",\"formContactForm\":\"ContactForm_formContactForm__EZbe8\",\"labelContactForm\":\"ContactForm_labelContactForm__ocuDM\",\"inputContactForm\":\"ContactForm_inputContactForm__h2PrQ\",\"buttonContactForm\":\"ContactForm_buttonContactForm__lTw1p\",\"nameInputContactForm\":\"ContactForm_nameInputContactForm__lolmN\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectBackgroundImages = state => state.backgroundImages.images;\n\nconst blackListImages = [926728, 2325627, 2004483, 1911637, 1365995, 2750627, 11080, 5422901];\n\nexport const selectBgGeneral = createSelector(\n    [selectBackgroundImages],\n    (backgroundImages) => {\n        if (backgroundImages.length > 0){\n            const bgGeneral = backgroundImages[0];\n        blackListImages.push(bgGeneral.id);\n        return bgGeneral\n    }\n    }\n);\n\nexport const selectReservedBG = createSelector(\n    [selectBackgroundImages],\n    (backgroundImages) => {\n        if (backgroundImages.length > 1){\n            const reservedBG = backgroundImages[1];\n            blackListImages.push(reservedBG.id);\n            return reservedBG\n        } \n    }\n);\n\nexport const selectBackgrounds = createSelector(\n    [selectBackgroundImages, () => blackListImages],\n    (backgroundImages, blackList) => {\n        const backgrounds = backgroundImages.filter(img => !blackList.includes(Number(img.id)));\n        return backgrounds;\n    }\n);\n\nexport const selectNumbsForImg = state => state.backgroundImages.numbsForImg;","import { addContact } from '../../redux/opertions';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\n// import { click } from '@testing-library/user-event/dist/click';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const namesContacts = useSelector(selectContacts).map(contact => contact.name);\n\n    const updateStateForAdd = (evt) => {\n        evt.preventDefault();\n        const newName = evt.currentTarget.elements.name.value;\n        \n        if(!namesContacts.some(name => name.toLowerCase() === newName.toLowerCase())){\n            const newNumb = evt.currentTarget.elements.number.value;\n            const dataForAdd = {\n                name: newName,\n                number: newNumb\n            }\n            dispatch(addContact(dataForAdd));\n            evt.currentTarget.reset();\n            removeClasses();\n        } else{\n            alert(`${newName} is already in contacts.`)\n        }\n        };\n\n        function forAddButton(){\n            const modalDivContactForm = document.querySelector('.modalDivContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n\n            modalDivContactForm.classList.add(css.modalDivContactFormActive);\n            firstDivContactForm.classList.add(css.firstDivContactFormActive);\n\n            modalDivContactForm.addEventListener('click', removeClasses)\n        };\n\n        const removeClasses = (e) => {\n            const modalDivContactForm = document.querySelector('.modalDivContactForm');\n            const firstDivContactForm = document.querySelector('.firstDivContactForm');\n            if(e){\n            if (e.target.classList.contains(css.modalDivContactFormActive)){\n            modalDivContactForm.removeEventListener('click', removeClasses);\n            modalDivContactForm.classList.remove(css.modalDivContactFormActive);\n            firstDivContactForm.classList.remove(css.firstDivContactFormActive);\n            };\n        } else{\n            modalDivContactForm.removeEventListener('click', removeClasses);\n            modalDivContactForm.classList.remove(css.modalDivContactFormActive);\n            firstDivContactForm.classList.remove(css.firstDivContactFormActive);\n        }\n        };\n\n    return (\n        <div className={[css.modalDivContactForm, 'modalDivContactForm'].join(' ')}>\n            <div className={[css.firstDivContactForm, 'firstDivContactForm'].join(' ')}\n        style={{\n            // backgroundImage: `url(${img || reservedImg})`,\n            backgroundSize: 'cover', \n            backgroundPosition: 'center', \n            }}>\n                <div className={css.divForMiniContactForm}>\n                    <button className={css.buttonAddMiniContactForm} type='button' onClick={forAddButton}>\n                        Add\n                    </button>\n                    </div>\n                <div className={css.divContactForm}>\n\n                <form className={css.formContactForm} onSubmit={updateStateForAdd}>\n            <label className={css.labelContactForm}>\n                <span className={css.nameInputContactForm}>Name</span>\n            <input className={css.inputContactForm} type=\"text\" name=\"name\" required />\n            </label>\n            <label className={css.labelContactForm}>\n                <span className={css.nameInputContactForm}>Number</span>\n                <input className={css.inputContactForm} type=\"tel\" name=\"number\" required />\n            </label>\n            <button className={css.buttonContactForm} type=\"submit\">Add contact</button>\n        </form>\n                </div>\n        </div>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"divForContactList\":\"Styles_divForContactList__Ofiyn\",\"listContacts\":\"Styles_listContacts__SuTGr\",\"itemContact\":\"Styles_itemContact__64PYw\",\"itemContactActive\":\"Styles_itemContactActive__g5AvF\",\"firstDivItemContact\":\"Styles_firstDivItemContact__qg5NT\",\"divItemContact\":\"Styles_divItemContact__azqCU\",\"pItemContactsName\":\"Styles_pItemContactsName__ZaW5M\",\"pItemContactsNumber\":\"Styles_pItemContactsNumber__mAeQH\",\"buttonDelete\":\"Styles_buttonDelete__Et1oD\"};","import css from '../Styles.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n        return(\n            <>\n                <label className={css.label}>\n                <span className={css.nameInput}>Find contacts by name</span>\n                <input \n                value={filterWithState}\n                className={css.input} \n                type=\"text\" \n                name=\"filter\" \n                onChange={updateStateForFilter}\n                />\n            </label>\n            </>\n        )\n}","import css from '../Styles.module.css';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/opertions';\nimport { selectNumbsForImg, selectBackgrounds, selectBackgroundImages, selectBgGeneral, selectReservedBG } from '../../redux/selectors';\nimport { deleteNumb } from '../../redux/backgroundImgSlice';\nimport { useEffect, useState } from 'react';\n\nexport const ItemContact = ({contact, index}) => {\n    const extraReservedImg = 'https://lh3.googleusercontent.com/pw/ABLVV857Vcs93eVOrm0Pm8WnNvcJSKLX3arSslyCmWpj-7cuG6ywCsjBpMiPRikFXgiC2xK8v2En5xPEynswskO4l7gjBpdWNWzhFRyOj8BJ3orxfjDDlbSF1EOr7mROLVTTOvdNiJhvM432128-GmRqOrEKcQ=w1500-h1000-s-no-gm?authuser=0';\n\n    const dispatch = useDispatch();\n    const numbsForImg = useSelector(selectNumbsForImg);\n    const backgrounds = useSelector(selectBackgrounds);\n\n    const lengthBgImages = useSelector(selectBackgroundImages).length;\n    const objBgGeneral = useSelector(selectBgGeneral);\n    const bgGeneral = objBgGeneral ? objBgGeneral.img : 'https://lh3.googleusercontent.com/pw/ABLVV84w_pNrNk2EMyul9WEZQIGgWoLvREgHEC97b4Mf15Ks5Hoqt7v7nc07QVJrbIMlK2LWegS0dAQKL6yuKPxHGHqTDwlQOCxOMGTWtrhzl73nYIFv9CWK4h9QUB2dvOTMfXj-twNVuqOHLhczMnZRTAvECg=w1920-h1080-s-no-gm?authuser=0';\n    const objReservedBg = useSelector(selectReservedBG);\n    const reservedBG = objReservedBg ? objReservedBg.img : extraReservedImg;\n   \n    \n\n    const updateStateForDelete = () => {\n        const idContact = contact.id;\n        dispatch(deleteContact(idContact));\n        dispatch(deleteNumb());\n        };\n\n    const [reservedImg, setReservedImg] = useState(extraReservedImg);\n\n    useEffect(() => {\n        if(lengthBgImages > 1){\n            setReservedImg(reservedBG);\n        } else if(lengthBgImages === 1){\n            setReservedImg(bgGeneral);\n        } else {\n            setReservedImg(extraReservedImg);\n        }\n    }, [lengthBgImages, bgGeneral, reservedBG, reservedImg]);\n\n    const lengthNumbsForImg = numbsForImg.length;\n    let numb = 1;\n\n    if (index >= lengthNumbsForImg){\n        numb = numbsForImg[index % lengthNumbsForImg];\n    } else {\n        numb = numbsForImg[index];\n    }\n\n    const img = backgrounds[numb] ? backgrounds[numb].img : null;\n\n    return(\n        <div className={css.firstDivItemContact}\n        style={{\n            backgroundImage: `url(${img || reservedImg})`,\n            backgroundSize: 'cover', \n            backgroundPosition: 'center', \n            }}>\n                <div className={css.divItemContact}>\n                    <h2 className={css.pItemContactsName}>{contact.name}</h2> \n                    <p className={css.pItemContactsNumber}>{contact.number}</p>\n                    <button id={contact.id} className={css.buttonDelete} type='button' onClick={updateStateForDelete}>\n                        Delete\n                    </button>\n                </div>\n        </div>\n    )\n}","import css from \"../Styles.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { ItemContact } from \"components/ItemContact/ItemContact\";\nimport { selectContacts, selectFilter } from \"../../redux/selectors\";\nimport { useRef, useEffect } from \"react\";\n\nexport const UlForCL = () => {\n    let contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n\n    const listContacts = useRef(null);\n\n    if(filter.length > 0) {\n        contacts = contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    };\n\n    useEffect(() => {\n        const itemsContact = document.querySelectorAll('.itemContact');\n\n        const forScroll = () => {\n            itemsContact.forEach(item => readRectItem(item));\n        };\n\n        listContacts.current.addEventListener('scroll', forScroll);\n\n        const autoScroll = (item, conditionForAutoSc = 0) => {\n            itemsContact.forEach(i => i.classList.remove(css.itemContactActive));\n                    item.classList.add(css.itemContactActive);\n                    const scrollLForList = listContacts.current.scrollLeft;\n                    listContacts.current.style.scrollBehavior = 'smooth';\n                    if(conditionForAutoSc !== 0){\n                        listContacts.current.scrollLeft = scrollLForList + conditionForAutoSc;\n                    };\n\n                    listContacts.current.removeEventListener('scroll', forScroll);\n                    \n                    setTimeout(() => {\n                        if(listContacts.current){\n                            listContacts.current.addEventListener('scroll', forScroll);\n                        }\n                    }, 250);\n        };\n\n        itemsContact.forEach(item => item.addEventListener('click', () => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            if(rectItem.x < rectListContacts.x + rectListContacts.width/2) {\n                const conditionForAutoSc = 0 - rectListContacts.width/2 + rectItem.x + 280;\n                autoScroll(item, conditionForAutoSc);\n            } else {\n                const conditionForAutoSc = 0  - rectListContacts.width/2 + rectItem.x + 80;\n                autoScroll(item, conditionForAutoSc);\n            }\n        }));\n\n        const readRectItem = (item) => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListContacts = listContacts.current.getBoundingClientRect();\n            const startActive = rectListContacts.x + rectListContacts.width/2 - rectItem.width/2 - 200;\n            const secondStAct = rectListContacts.x + rectListContacts.width/2 + rectItem.width/2 - 200;\n            if(rectItem.x > startActive && \n                rectItem.x < rectListContacts.x + rectListContacts.width/2 &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 - rectItem.width/2 + 200;\n                autoScroll(item, conditionForAutoSc);\n            } else if(rectItem.x > rectListContacts.x + rectListContacts.width/2 && \n                rectItem.x < secondStAct &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 + rectItem.width/2 - 100;\n                    autoScroll(item, conditionForAutoSc);\n                }\n        };\n    }, [contacts]);\n\n    return(\n        <ul ref={listContacts} className={css.listContacts}>\n            {contacts.length !== 0 &&\n                contacts.map((contact, index) => { \n                    \n                    return(\n                    <li key={contact.id} className={[css.itemContact, 'itemContact'].join(' ')}>\n                    <ItemContact \n                        contact={contact}\n                        index={contacts.indexOf(contact)}\n                        key={contact.id}\n                    />\n                    </li>\n                )})\n            }\n        </ul>\n    )\n};","import styled, { keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContaiter = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\n`;\n\nconst RollerContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RollerDiv = styled.div`\n  animation: ${rotate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  transform-origin: 40px 40px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #000;\n    margin: -4px 0 0 -4px;\n  }\n`;\n\nconst RollerItem = styled(RollerDiv)`\n  &:nth-child(1) {\n    animation-delay: -0.036s;\n    &:after {\n      top: 63px;\n      left: 63px;\n    }\n  }\n  &:nth-child(2) {\n    animation-delay: -0.072s;\n    &:after {\n      top: 68px;\n      left: 56px;\n    }\n  }\n  &:nth-child(3) {\n    animation-delay: -0.108s;\n    &:after {\n      top: 71px;\n      left: 48px;\n    }\n  }\n  &:nth-child(4) {\n    animation-delay: -0.144s;\n    &:after {\n      top: 72px;\n      left: 40px;\n    }\n  }\n  &:nth-child(5) {\n    animation-delay: -0.18s;\n    &:after {\n      top: 71px;\n      left: 32px;\n    }\n  }\n  &:nth-child(6) {\n    animation-delay: -0.216s;\n    &:after {\n      top: 68px;\n      left: 24px;\n    }\n  }\n  &:nth-child(7) {\n    animation-delay: -0.252s;\n    &:after {\n      top: 63px;\n      left: 17px;\n    }\n  }\n  &:nth-child(8) {\n    animation-delay: -0.288s;\n    &:after {\n      top: 56px;\n      left: 12px;\n    }\n  }\n`;\n\nexport const Loader = () => {\n    return(\n    <LoaderContaiter>\n        <RollerContainer>\n    {[...Array(8)].map((_, index) => (\n    <RollerItem key={index} />\n    ))}\n    </RollerContainer>\n    </LoaderContaiter>\n    )};","import css from '../Styles.module.css';\nimport { UlForCL } from 'components/UlForCL/UlForCL';\nimport { selectIsLoading, selectError, selectNumbsForImg, selectBackgrounds, selectBgGeneral } from '../../redux/selectors';\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/opertions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loader } from \"../Loader/Loader\";\nimport { createNumbs } from '../../redux/backgroundImgSlice';\n\nexport const ContactList = () => {\n    \n    const backgrounds = useSelector(selectBackgrounds);\n    const numbsForImg = useSelector(selectNumbsForImg);\n\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    const bgGeneral = useSelector(selectBgGeneral)\n    const imgForBackground = bgGeneral ? bgGeneral.img : 'https://lh3.googleusercontent.com/pw/ABLVV84w_pNrNk2EMyul9WEZQIGgWoLvREgHEC97b4Mf15Ks5Hoqt7v7nc07QVJrbIMlK2LWegS0dAQKL6yuKPxHGHqTDwlQOCxOMGTWtrhzl73nYIFv9CWK4h9QUB2dvOTMfXj-twNVuqOHLhczMnZRTAvECg=w1920-h1080-s-no-gm?authuser=0';\n    \n    const makeMassifNumbs = () => {\n        const massifNumbers = [];\n        const lengthImgMas = backgrounds.length - 1;\n        function createMassNumbs (){\n            const randomNumb = Math.floor(Math.random() * lengthImgMas);\n        const lengthMasNumb = massifNumbers.length;\n        if( massifNumbers[lengthMasNumb-1] !== randomNumb &&\n            massifNumbers[lengthMasNumb-2] !== randomNumb &&\n            massifNumbers[lengthMasNumb-3] !== randomNumb &&\n            massifNumbers[lengthMasNumb-4] !== randomNumb &&\n            massifNumbers[lengthMasNumb-5] !== randomNumb ){\n            massifNumbers.push(randomNumb);\n        } else {\n            createMassNumbs();\n        }\n        };\n        for (let i = 0; i <= lengthImgMas; i++){\n            createMassNumbs();\n        }\n        return massifNumbers\n    };\n\n    useEffect(() => {\n        if (numbsForImg.length < backgrounds.length){\n        dispatch(createNumbs(makeMassifNumbs()));\n        };\n    });\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    \n\n\n\n    return(\n        <>\n        {error ? (\n        <h2>Oopsss...Something went wrong...</h2>\n        ) : (\n        <div id='divForContactList' className={css.divForContactList} \n            style={{\n                backgroundImage: `url(${imgForBackground})`,\n                backgroundSize: 'cover', \n                backgroundPosition: 'center', \n                }}>\n                {isLoading && !error ? <Loader /> : <UlForCL />}\n            </div>\n            )}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"divContFiltPageUsers\":\"PageUsers_divContFiltPageUsers__JZL5M\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectToken } from '../../redux/workWithBackend/selectors';\nimport css from './PageUsers.module.css';\n\nconst PageUsers = () => {\n    const token = useSelector(selectToken);\n    if (token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    }\n    return(\n        <>\n        <div className={css.divContFiltPageUsers}>\n        <Filter />\n        <ContactForm />\n        </div>\n        <ContactList />\n        </>\n    )\n};\n\nexport default PageUsers;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectBackgroundImages","backgroundImages","images","blackListImages","selectBgGeneral","createSelector","length","bgGeneral","push","id","selectReservedBG","reservedBG","selectBackgrounds","blackList","img","includes","Number","selectNumbsForImg","numbsForImg","ContactForm","dispatch","useDispatch","namesContacts","useSelector","map","contact","name","removeClasses","e","modalDivContactForm","document","querySelector","firstDivContactForm","target","classList","contains","css","removeEventListener","remove","_jsx","className","join","children","_jsxs","style","backgroundSize","backgroundPosition","type","onClick","add","addEventListener","onSubmit","evt","preventDefault","newName","currentTarget","elements","value","some","toLowerCase","alert","concat","newNumb","number","dataForAdd","addContact","reset","required","Filter","filterWithState","_Fragment","onChange","filterValue","setFilter","ItemContact","_ref","index","extraReservedImg","backgrounds","lengthBgImages","objBgGeneral","objReservedBg","_useState","useState","_useState2","_slicedToArray","reservedImg","setReservedImg","useEffect","lengthNumbsForImg","numb","backgroundImage","idContact","deleteContact","deleteNumb","UlForCL","listContacts","useRef","itemsContact","querySelectorAll","forScroll","forEach","item","readRectItem","current","autoScroll","conditionForAutoSc","arguments","undefined","i","scrollLForList","scrollLeft","scrollBehavior","setTimeout","rectItem","getBoundingClientRect","rectListContacts","x","width","startActive","secondStAct","ref","indexOf","rotate","keyframes","_templateObject","_taggedTemplateLiteral","LoaderContaiter","styled","_templateObject2","RollerContainer","_templateObject3","RollerDiv","_templateObject4","RollerItem","_templateObject5","Loader","_toConsumableArray","Array","_","ContactList","imgForBackground","createNumbs","massifNumbers","lengthImgMas","createMassNumbs","randomNumb","Math","floor","random","lengthMasNumb","makeMassifNumbs","fetchContacts","token","selectToken","axios"],"sourceRoot":""}